{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1540474779075},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1540474779074},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1540474779075},{"_id":"source/.DS_Store","hash":"7854d7abd255d7c343ab2ea9e43a0acf2e5893f8","modified":1551943518919},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1540474779076},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1540474779076},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1540474779077},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1540474779077},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1540474779076},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1540474779077},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1540474779077},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1540474779078},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1540474779078},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1540474779079},{"_id":"themes/next/_config.yml","hash":"1ebd9e2993fa7d2530f4d08bf4b852673ef36c8c","modified":1540474779079},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1540474779104},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1540474779079},{"_id":"source/_posts/.DS_Store","hash":"d3bd684e2e08be2bb4ccc367b3d7ff0b50d8c69e","modified":1542201558001},{"_id":"source/_posts/browser.md","hash":"038e459049a5b379c60740c2130341ff8fa86285","modified":1540474779056},{"_id":"source/_posts/git.md","hash":"e29ef6564ead08d34f73fb7ee17eb94930b26bef","modified":1540474779056},{"_id":"source/_posts/jsonp.md","hash":"8dda35ce82d144b64e187573842aab3751848e6d","modified":1540474779057},{"_id":"source/_posts/vuex.md","hash":"2cc2e8abacdb7d29d4ea8be688d155d3f15d55f7","modified":1540474779057},{"_id":"source/_posts/secret_login.md","hash":"d82a9facaa6e77bc49c493a4e68dbf6aba8502a7","modified":1540477875956},{"_id":"source/_posts/mainlib.db","hash":"18c6ff9bc3a3f980601829284da5da8e1dfb9b52","modified":1540485207130},{"_id":"source/_posts/vue项目全局引入sass的全局文件.md","hash":"8b7ed70beab0dd8972ded51a010ec0bfb2333778","modified":1554288281383},{"_id":"source/_posts/解决vue-cli 在多页面应用中HMR特别慢的问题.md","hash":"13ce5684a5d9bebfe8e0e5a5ca429065c1b89728","modified":1561360203937},{"_id":"source/_posts/webpack import()动态引入优化.md","hash":"8119414a07f68f5a78b3735cec5e50ed034fafee","modified":1561606827312},{"_id":"source/_posts/小程序canvas生成海报.md","hash":"3b80983f55be654915dbf5a0af490c587fbb3a4d","modified":1542269486419},{"_id":"source/_posts/小程序一次图片加载优化.md","hash":"a86195e1f097c54dc2efb9b9892748bc6de5aa5c","modified":1551956429494},{"_id":"source/_posts/阿里云安装jdk、tomcat.md","hash":"4779a67230d6938ebc7fb9e576c81ff682a2cc7b","modified":1551950911499},{"_id":"source/about/index.md","hash":"24e6e702ada5ca38c27ac67025d8d7904460b319","modified":1540474779058},{"_id":"source/_posts/阿里云集成jenkins实现自动部署github项目.md","hash":"36dedd7d4a7edd17d2535e3d027c31523101afc9","modified":1551944109225},{"_id":"source/categories/index.md","hash":"f86e3df8d64fd5c8270e3981bf811516eeb41e91","modified":1540479119750},{"_id":"source/tags/index.md","hash":"49e9cab6ebb93cf1eb2992c2b518157a185c880f","modified":1540479160105},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1540474779075},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1540474779075},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1540474779076},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1540474779076},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1540474779080},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1540474779080},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1540474779080},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1540474779080},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1540474779081},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1540474779081},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1540474779081},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1540474779081},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1540474779082},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1540474779081},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1540474779082},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1540474779082},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1540474779082},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1540474779082},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1540474779083},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1540474779084},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1540474779083},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1540474779103},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1540474779103},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1540474779103},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1540474779104},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1540474779104},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1540474779103},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1540474779104},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1540474779105},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1540474779104},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1540474779179},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1540474779180},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1540474779180},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779139},{"_id":"source/_posts/docs/mac安装mongodb.md","hash":"bc8404c5e7f96ad7a5f5e891fd59dea8a9353957","modified":1551929580112},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1540474779083},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1540474779084},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1540474779084},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1540474779085},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1540474779085},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1540474779085},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1540474779086},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1540474779086},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1540474779086},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1540474779086},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1540474779087},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1540474779087},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1540474779088},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1540474779086},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1540474779088},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1540474779100},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1540474779100},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1540474779099},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1540474779099},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1540474779100},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1540474779101},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1540474779101},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1540474779090},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1540474779090},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1540474779092},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1540474779105},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1540474779106},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1540474779106},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1540474779106},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1540474779106},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1540474779106},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1540474779107},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1540474779107},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1540474779107},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1540474779139},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1540474779140},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1540474779140},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1540474779140},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1540474779141},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1540474779141},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1540474779141},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1540474779141},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1540474779142},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1540474779142},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1540474779143},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540474779143},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1540474779142},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1540474779142},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1540474779143},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540474779143},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1540474779143},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1540474779144},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1540474779144},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779091},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779091},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779131},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779131},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779131},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779138},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1540474779139},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1540474779087},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1540474779087},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1540474779088},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1540474779088},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1540474779089},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1540474779089},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1540474779089},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1540474779089},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1540474779090},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1540474779092},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1540474779092},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1540474779092},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1540474779093},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1540474779093},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1540474779093},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1540474779093},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1540474779094},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1540474779094},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1540474779094},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1540474779095},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1540474779096},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1540474779097},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1540474779097},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1540474779097},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1540474779098},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1540474779098},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1540474779098},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1540474779098},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1540474779099},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1540474779098},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1540474779099},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1540474779102},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1540474779102},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1540474779102},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1540474779102},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1540474779091},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1540474779091},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1540474779091},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1540474779130},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1540474779131},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1540474779130},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1540474779131},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1540474779137},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1540474779138},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1540474779138},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1540474779144},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1540474779138},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1540474779144},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1540474779145},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1540474779145},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1540474779145},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1540474779145},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1540474779146},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1540474779146},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1540474779147},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1540474779147},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1540474779147},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1540474779153},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1540474779153},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1540474779151},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1537023709977},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1537023709978},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1540474779157},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1540474779158},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1540474779158},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1540474779158},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1540474779160},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1540474779160},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1540474779160},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1540474779160},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1540474779161},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1540474779166},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1540474779167},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1540474779167},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1540474779167},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1540474779167},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1540474779168},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1540474779168},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1540474779168},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1540474779168},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1540474779168},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1540474779172},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1540474779172},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1540474779169},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1540474779169},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1540474779169},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1540474779169},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1540474779170},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1540474779170},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1540474779170},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1540474779170},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1540474779172},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1540474779171},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1540474779170},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1540474779171},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1540474779171},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1540474779176},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1540474779176},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1540474779171},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1540474779172},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1540474779178},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1540474779178},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1540474779178},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1540474779166},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1540474779101},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1540474779101},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1540474779108},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1540474779109},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1540474779109},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1540474779109},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1540474779110},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1540474779113},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1540474779118},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1540474779128},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1540474779128},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1540474779129},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1540474779129},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1540474779130},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1540474779130},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1540474779129},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1540474779132},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1540474779132},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1540474779132},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1540474779133},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1540474779133},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1540474779133},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1540474779133},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1540474779133},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1540474779134},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1540474779135},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1540474779135},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1540474779135},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1540474779135},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1540474779136},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1540474779136},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1540474779136},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1540474779137},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1540474779137},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1540474779137},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1540474779146},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1540474779149},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1540474779150},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1540474779150},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1540474779154},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1540474779154},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1540474779155},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1540474779155},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1540474779154},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1540474779154},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1540474779156},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1540474779159},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1540474779159},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1540474779157},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1540474779157},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1540474779161},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1540474779162},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1540474779162},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1540474779175},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1540474779175},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1540474779150},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1540474779166},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1540474779166},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1540474779177},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1540474779110},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1540474779110},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1540474779111},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1540474779111},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1540474779111},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1540474779111},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1540474779112},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1540474779112},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1540474779112},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1540474779112},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1540474779113},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1540474779113},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1540474779113},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1540474779113},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1540474779114},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1540474779115},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1540474779115},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1540474779115},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1540474779115},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1540474779115},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1540474779116},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1540474779116},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1540474779116},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1540474779116},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1540474779116},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1540474779117},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1540474779117},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1540474779117},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1540474779117},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1540474779117},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1540474779118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1540474779118},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1540474779118},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1540474779118},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1540474779119},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1540474779119},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1540474779119},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1540474779119},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1540474779119},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1540474779120},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1540474779120},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1540474779120},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1540474779120},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1540474779120},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1540474779124},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1540474779124},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1540474779125},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1540474779125},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1540474779126},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1540474779127},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1540474779128},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1540474779127},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1540474779125},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1540474779134},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1540474779134},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1540474779136},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1540474779148},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1540474779148},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1540474779148},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1540474779149},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1540474779148},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1540474779155},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1540474779155},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1540474779156},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1540474779156},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1540474779156},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1540474779156},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1540474779163},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1540474779163},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1540474779165},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1540474779151},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1540474779173},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1540474779164}],"Category":[{"name":"浏览器","_id":"cjxe4dfql0004sdr195x9lybh"},{"name":"git","_id":"cjxe4dfqu000asdr1oo5dlzgk"},{"name":"jsonp","_id":"cjxe4dfqy000gsdr1mk3kngqe"},{"name":"vuex","_id":"cjxe4dfr1000msdr16q8qlaem"},{"name":"linux","_id":"cjxe4dfr5000ssdr19zjhc2uu"},{"name":"vue","_id":"cjxe4dfr9000xsdr1w8z9xa1a"},{"name":"小程序","_id":"cjxe4dfre0018sdr1si6lkdmb"},{"name":"阿里云","_id":"cjxe4dfrg001gsdr1jmu2gx1k"},{"name":"mongoDB","_id":"cjxe4dftz001ssdr1i44idjmf"}],"Data":[],"Page":[{"title":"about me","date":"2018-07-11T03:07:40.000Z","_content":"一个俗人，一个俗到不能再俗的人。","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2018-07-11 11:07:40\n---\n一个俗人，一个俗到不能再俗的人。","updated":"2018-10-25T13:39:39.058Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjxe4dfqi0001sdr1f6p8snny","content":"<p>一个俗人，一个俗到不能再俗的人。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一个俗人，一个俗到不能再俗的人。</p>\n"},{"title":"categories","date":"2018-10-25T14:51:17.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-10-25 22:51:17\ntype: \"categories\"\n---\n","updated":"2018-10-25T14:51:59.750Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjxe4dfqk0003sdr1t4nahq95","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-10-25T14:52:24.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-10-25 22:52:24\ntype: 'tags'\n---\n","updated":"2018-10-25T14:52:40.105Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjxe4dfqq0007sdr1zhr059ez","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"浏览器相关知识","keywords":["浏览器"],"description":"捕捉用户对浏览器的一些操作，包括无记录跳转、点击返回按钮等","_content":"\n\n##### 无历史记录跳转页面\n\n```\nwindow.location.replace(url);\t//新文档替换当前文档\n```\n\n---\n\n##### 检查用户是否按了回退键\n\n```\nwindow.onbeforeunload = function() {\n    return \"You work will be lost.\";\n};\n```\n\n---\n\n##### 捕捉浏览器关闭的事件\n\n```\n<script language=\"javascript\">\nfunction fnUnloadHandler() {\n\n       alert(\"Unload event.. Do something to invalidate users session..\"); \n}\n</script>\n<body onbeforeunload=\"fnUnloadHandler()\"></body>\n```\n\n---\n\n##### 完全禁止使用后退键\n\n```\n<script type=\"text/javascript\">\n    window.history.forward();\n    function noBack() { window.history.forward(); }\n</script>\n<body onload=\"noBack();\" onpageshow=\"if (event.persisted) noBack();\" onunload=\"\"></body>\n```\n\n---\n\n##### 让返回按钮失效\n\n```\n在要放回的页面加入下面代码\n<script>\n    $(document).ready(function(e) {\n\n    if (window.history && window.history.pushState) {\n        $(window).on('popstate', function () {\n            window.history.pushState('forward', null, '#');\n            window.history.forward(1);\n        //$(\"#label\").html(\"第\" + (++counter) + \"次单击后退按钮。\");\n        });\n    }\n    window.history.pushState('forward', null, '#'); //在IE中必须得有这两行\n    window.history.forward(1);\n    });\n</script>\n```\n\n---\n##### 让浏览器全屏显示网页和取消全屏\n\n```\n//点击触发此方法让页面全屏\nvar launchFullScreen = function (element) {\n\tif (element.requestFullscreen) {\n\t\telement.requestFullscreen();\n\t} else if (element.msRequestFullscreen) {\n\t\telement.msRequestFullscreen();\n\t} else if (element.mozRequestFullScreen) {\n\t\telement.mozRequestFullScreen();\n\t} else if (element.webkitRequestFullscreen) {\n\t\telement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n\t}\n},\n//点击触发此方法让页面非全屏\ncancelFullScreen = function () {\n\tif (document.exitFullscreen) {\n\t\tdocument.exitFullscreen();\n\t} else if (document.mozCancelFullScreen) {\n\t\tdocument.mozCancelFullScreen();\n\t} else if (document.webkitCancelFullScreen) {\n\t\tdocument.webkitCancelFullScreen();\n\t} else if (document.msExitFullscreen) {\n\t\tdocument.msExitFullscreen();\n\t} else {\n\t\treturn true;\n\t}\n};\n```\n<!--more-->","source":"_posts/browser.md","raw":"---\ntitle: 浏览器相关知识\ncategories: 浏览器 \ntags: 浏览器\nkeywords: [浏览器]\ndescription: 捕捉用户对浏览器的一些操作，包括无记录跳转、点击返回按钮等\n---\n\n\n##### 无历史记录跳转页面\n\n```\nwindow.location.replace(url);\t//新文档替换当前文档\n```\n\n---\n\n##### 检查用户是否按了回退键\n\n```\nwindow.onbeforeunload = function() {\n    return \"You work will be lost.\";\n};\n```\n\n---\n\n##### 捕捉浏览器关闭的事件\n\n```\n<script language=\"javascript\">\nfunction fnUnloadHandler() {\n\n       alert(\"Unload event.. Do something to invalidate users session..\"); \n}\n</script>\n<body onbeforeunload=\"fnUnloadHandler()\"></body>\n```\n\n---\n\n##### 完全禁止使用后退键\n\n```\n<script type=\"text/javascript\">\n    window.history.forward();\n    function noBack() { window.history.forward(); }\n</script>\n<body onload=\"noBack();\" onpageshow=\"if (event.persisted) noBack();\" onunload=\"\"></body>\n```\n\n---\n\n##### 让返回按钮失效\n\n```\n在要放回的页面加入下面代码\n<script>\n    $(document).ready(function(e) {\n\n    if (window.history && window.history.pushState) {\n        $(window).on('popstate', function () {\n            window.history.pushState('forward', null, '#');\n            window.history.forward(1);\n        //$(\"#label\").html(\"第\" + (++counter) + \"次单击后退按钮。\");\n        });\n    }\n    window.history.pushState('forward', null, '#'); //在IE中必须得有这两行\n    window.history.forward(1);\n    });\n</script>\n```\n\n---\n##### 让浏览器全屏显示网页和取消全屏\n\n```\n//点击触发此方法让页面全屏\nvar launchFullScreen = function (element) {\n\tif (element.requestFullscreen) {\n\t\telement.requestFullscreen();\n\t} else if (element.msRequestFullscreen) {\n\t\telement.msRequestFullscreen();\n\t} else if (element.mozRequestFullScreen) {\n\t\telement.mozRequestFullScreen();\n\t} else if (element.webkitRequestFullscreen) {\n\t\telement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n\t}\n},\n//点击触发此方法让页面非全屏\ncancelFullScreen = function () {\n\tif (document.exitFullscreen) {\n\t\tdocument.exitFullscreen();\n\t} else if (document.mozCancelFullScreen) {\n\t\tdocument.mozCancelFullScreen();\n\t} else if (document.webkitCancelFullScreen) {\n\t\tdocument.webkitCancelFullScreen();\n\t} else if (document.msExitFullscreen) {\n\t\tdocument.msExitFullscreen();\n\t} else {\n\t\treturn true;\n\t}\n};\n```\n<!--more-->","slug":"browser","published":1,"date":"2018-10-25T13:39:39.056Z","updated":"2018-10-25T13:39:39.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqd0000sdr1w7qvqz7d","content":"<h5 id=\"无历史记录跳转页面\"><a href=\"#无历史记录跳转页面\" class=\"headerlink\" title=\"无历史记录跳转页面\"></a>无历史记录跳转页面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.location.replace(url);\t//新文档替换当前文档</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"检查用户是否按了回退键\"><a href=\"#检查用户是否按了回退键\" class=\"headerlink\" title=\"检查用户是否按了回退键\"></a>检查用户是否按了回退键</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onbeforeunload = function() &#123;</span><br><span class=\"line\">    return &quot;You work will be lost.&quot;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"捕捉浏览器关闭的事件\"><a href=\"#捕捉浏览器关闭的事件\" class=\"headerlink\" title=\"捕捉浏览器关闭的事件\"></a>捕捉浏览器关闭的事件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=&quot;javascript&quot;&gt;</span><br><span class=\"line\">function fnUnloadHandler() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       alert(&quot;Unload event.. Do something to invalidate users session..&quot;); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body onbeforeunload=&quot;fnUnloadHandler()&quot;&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"完全禁止使用后退键\"><a href=\"#完全禁止使用后退键\" class=\"headerlink\" title=\"完全禁止使用后退键\"></a>完全禁止使用后退键</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    window.history.forward();</span><br><span class=\"line\">    function noBack() &#123; window.history.forward(); &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body onload=&quot;noBack();&quot; onpageshow=&quot;if (event.persisted) noBack();&quot; onunload=&quot;&quot;&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"让返回按钮失效\"><a href=\"#让返回按钮失效\" class=\"headerlink\" title=\"让返回按钮失效\"></a>让返回按钮失效</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在要放回的页面加入下面代码</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(document).ready(function(e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (window.history &amp;&amp; window.history.pushState) &#123;</span><br><span class=\"line\">        $(window).on(&apos;popstate&apos;, function () &#123;</span><br><span class=\"line\">            window.history.pushState(&apos;forward&apos;, null, &apos;#&apos;);</span><br><span class=\"line\">            window.history.forward(1);</span><br><span class=\"line\">        //$(&quot;#label&quot;).html(&quot;第&quot; + (++counter) + &quot;次单击后退按钮。&quot;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    window.history.pushState(&apos;forward&apos;, null, &apos;#&apos;); //在IE中必须得有这两行</span><br><span class=\"line\">    window.history.forward(1);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"让浏览器全屏显示网页和取消全屏\"><a href=\"#让浏览器全屏显示网页和取消全屏\" class=\"headerlink\" title=\"让浏览器全屏显示网页和取消全屏\"></a>让浏览器全屏显示网页和取消全屏</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//点击触发此方法让页面全屏</span><br><span class=\"line\">var launchFullScreen = function (element) &#123;</span><br><span class=\"line\">\tif (element.requestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.requestFullscreen();</span><br><span class=\"line\">\t&#125; else if (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.msRequestFullscreen();</span><br><span class=\"line\">\t&#125; else if (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">\t\telement.mozRequestFullScreen();</span><br><span class=\"line\">\t&#125; else if (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">//点击触发此方法让页面非全屏</span><br><span class=\"line\">cancelFullScreen = function () &#123;</span><br><span class=\"line\">\tif (document.exitFullscreen) &#123;</span><br><span class=\"line\">\t\tdocument.exitFullscreen();</span><br><span class=\"line\">\t&#125; else if (document.mozCancelFullScreen) &#123;</span><br><span class=\"line\">\t\tdocument.mozCancelFullScreen();</span><br><span class=\"line\">\t&#125; else if (document.webkitCancelFullScreen) &#123;</span><br><span class=\"line\">\t\tdocument.webkitCancelFullScreen();</span><br><span class=\"line\">\t&#125; else if (document.msExitFullscreen) &#123;</span><br><span class=\"line\">\t\tdocument.msExitFullscreen();</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>","site":{"data":{}},"excerpt":"<h5 id=\"无历史记录跳转页面\"><a href=\"#无历史记录跳转页面\" class=\"headerlink\" title=\"无历史记录跳转页面\"></a>无历史记录跳转页面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.location.replace(url);\t//新文档替换当前文档</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"检查用户是否按了回退键\"><a href=\"#检查用户是否按了回退键\" class=\"headerlink\" title=\"检查用户是否按了回退键\"></a>检查用户是否按了回退键</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onbeforeunload = function() &#123;</span><br><span class=\"line\">    return &quot;You work will be lost.&quot;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"捕捉浏览器关闭的事件\"><a href=\"#捕捉浏览器关闭的事件\" class=\"headerlink\" title=\"捕捉浏览器关闭的事件\"></a>捕捉浏览器关闭的事件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script language=&quot;javascript&quot;&gt;</span><br><span class=\"line\">function fnUnloadHandler() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       alert(&quot;Unload event.. Do something to invalidate users session..&quot;); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body onbeforeunload=&quot;fnUnloadHandler()&quot;&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"完全禁止使用后退键\"><a href=\"#完全禁止使用后退键\" class=\"headerlink\" title=\"完全禁止使用后退键\"></a>完全禁止使用后退键</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    window.history.forward();</span><br><span class=\"line\">    function noBack() &#123; window.history.forward(); &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body onload=&quot;noBack();&quot; onpageshow=&quot;if (event.persisted) noBack();&quot; onunload=&quot;&quot;&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"让返回按钮失效\"><a href=\"#让返回按钮失效\" class=\"headerlink\" title=\"让返回按钮失效\"></a>让返回按钮失效</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在要放回的页面加入下面代码</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(document).ready(function(e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (window.history &amp;&amp; window.history.pushState) &#123;</span><br><span class=\"line\">        $(window).on(&apos;popstate&apos;, function () &#123;</span><br><span class=\"line\">            window.history.pushState(&apos;forward&apos;, null, &apos;#&apos;);</span><br><span class=\"line\">            window.history.forward(1);</span><br><span class=\"line\">        //$(&quot;#label&quot;).html(&quot;第&quot; + (++counter) + &quot;次单击后退按钮。&quot;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    window.history.pushState(&apos;forward&apos;, null, &apos;#&apos;); //在IE中必须得有这两行</span><br><span class=\"line\">    window.history.forward(1);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"让浏览器全屏显示网页和取消全屏\"><a href=\"#让浏览器全屏显示网页和取消全屏\" class=\"headerlink\" title=\"让浏览器全屏显示网页和取消全屏\"></a>让浏览器全屏显示网页和取消全屏</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//点击触发此方法让页面全屏</span><br><span class=\"line\">var launchFullScreen = function (element) &#123;</span><br><span class=\"line\">\tif (element.requestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.requestFullscreen();</span><br><span class=\"line\">\t&#125; else if (element.msRequestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.msRequestFullscreen();</span><br><span class=\"line\">\t&#125; else if (element.mozRequestFullScreen) &#123;</span><br><span class=\"line\">\t\telement.mozRequestFullScreen();</span><br><span class=\"line\">\t&#125; else if (element.webkitRequestFullscreen) &#123;</span><br><span class=\"line\">\t\telement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">//点击触发此方法让页面非全屏</span><br><span class=\"line\">cancelFullScreen = function () &#123;</span><br><span class=\"line\">\tif (document.exitFullscreen) &#123;</span><br><span class=\"line\">\t\tdocument.exitFullscreen();</span><br><span class=\"line\">\t&#125; else if (document.mozCancelFullScreen) &#123;</span><br><span class=\"line\">\t\tdocument.mozCancelFullScreen();</span><br><span class=\"line\">\t&#125; else if (document.webkitCancelFullScreen) &#123;</span><br><span class=\"line\">\t\tdocument.webkitCancelFullScreen();</span><br><span class=\"line\">\t&#125; else if (document.msExitFullscreen) &#123;</span><br><span class=\"line\">\t\tdocument.msExitFullscreen();</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\treturn true;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","more":""},{"title":"git基础知识","keywords":["git"],"description":"本文重点描述的是git的常用和配置命令","_content":"##### 配置你的git名字\n\n```\ngit config --global user.name \"你的名字\"\n```\n##### 配置你的邮箱\n\n```\ngit config --global user.email \"你的邮箱\"\n```\n##### 初始化Git\n\n```\ngit init\n```\n##### 查看提交记录\n\n```\ngit log\n```\n##### 查看当前状态\n\n```\ngit status\n```\n##### 添加到暂存区\n\n```\ngit add .\n```\n##### 提交\n\n```\ngit commit -m \"提交变更信息\"\n```\n##### 查看工作区变更\n\n```\ngit diff\n```\n##### 查看暂存区变更\n\n```\ngit diff --staged\n```\n##### 删除文件\n\n```\ngit rm <文件名>\n\n// 删除的文件会直接被放到暂存区\n```\n##### 重命名文件\n\n```\ngit mv <文件名> <新文件名>\n```\n##### 恢复工作区的变更\n\n```\ngit checkout -- <需要恢复的文件名>\n\n//此方法比较危险 如果你再次后悔就五天无力了   \n//推荐使用下面的方法\n\ngit stash\n\n//如果你后悔撤销了使用下面命令恢复\n \ngit stash apply\n```\n 恢复暂存区的变更\n\n```\ngit reset HEAD <需要恢复的文件名\n```\n\n##### 恢复历史记录的变更\n\n```\ngit reset --hard <commit //提交记录commit的哈希值>\n```\n##### 给记录打一个tag（节点）\n\n```\ngit tag -a \"tag名\" -m \"打tag的信息\"\n```\n##### 查看所有tag\n\n```\ngit tag\n```\n##### 查看某一tag的详细信息\n\n```\ngit show 'tag名'\n```\n##### 分支\n\n```\n// 查看分支\ngit branch\n// 创建分支\ngit branch <分支名>\n// 切换分支\ngit checkout <分支名>\n// 创建并切换分支\ngit checkout -b <分支名>\n// 删除分支\ngit branch -d <分支名>\n// 强制删除分支\ngit branch -D <分支名>\n// 合并分支 切换到主分支\ngit merge <分支名>\n// 查看已经合并的分支\ngit branch --merged\n\n```\n##### 挑选某一次的提交\n\n```\ngit cherry-pick <提交的哈希值>\n```\n\n##### 利用github创建远程仓库\n    1. 登录自己的github账号\n    2. 点击头像左面的+里面的new repository\n    3. 填写仓库名、描述（可以不填）\n    4. 选择public\n    5. 点击创建\n##### 查看当前远程仓库\n    \n```\n    git remote -v\n```\n    \n##### 更改远程仓库地址\n\n```\n    git remote set-url origin 地址\n```\n\n##### 获取远程仓库的所有分支\n    \n```\n    git fetch \n```\n    \n##### 从远程仓库拉取更新\n\n``` \n    git pull origin 分支名\n```\n##### 将自己的代码推送到远程仓库\n    \n```\n    git push origin 分支名\n```\n##### 将您的项目推送到远程仓库\n```\n    1.echo \"# aaa\" >> README.md\n    2.git init\n    3.git add README.md\n    4.git commit -m \"first commit\"\n    5.git remote add origin \"仓库地址\"\n    6.git push -u origin master\n\n    \n    //or如果您的项目以前就存在仓库里\n    \n    1.git remote add origin https://github.com/frxing/aaa.git\n    2.git push -u origin master\n```  ","source":"_posts/git.md","raw":"---\ntitle: git基础知识\ncategories: git \ntags: git\nkeywords: [git]\ndescription: 本文重点描述的是git的常用和配置命令\n---\n##### 配置你的git名字\n\n```\ngit config --global user.name \"你的名字\"\n```\n##### 配置你的邮箱\n\n```\ngit config --global user.email \"你的邮箱\"\n```\n##### 初始化Git\n\n```\ngit init\n```\n##### 查看提交记录\n\n```\ngit log\n```\n##### 查看当前状态\n\n```\ngit status\n```\n##### 添加到暂存区\n\n```\ngit add .\n```\n##### 提交\n\n```\ngit commit -m \"提交变更信息\"\n```\n##### 查看工作区变更\n\n```\ngit diff\n```\n##### 查看暂存区变更\n\n```\ngit diff --staged\n```\n##### 删除文件\n\n```\ngit rm <文件名>\n\n// 删除的文件会直接被放到暂存区\n```\n##### 重命名文件\n\n```\ngit mv <文件名> <新文件名>\n```\n##### 恢复工作区的变更\n\n```\ngit checkout -- <需要恢复的文件名>\n\n//此方法比较危险 如果你再次后悔就五天无力了   \n//推荐使用下面的方法\n\ngit stash\n\n//如果你后悔撤销了使用下面命令恢复\n \ngit stash apply\n```\n 恢复暂存区的变更\n\n```\ngit reset HEAD <需要恢复的文件名\n```\n\n##### 恢复历史记录的变更\n\n```\ngit reset --hard <commit //提交记录commit的哈希值>\n```\n##### 给记录打一个tag（节点）\n\n```\ngit tag -a \"tag名\" -m \"打tag的信息\"\n```\n##### 查看所有tag\n\n```\ngit tag\n```\n##### 查看某一tag的详细信息\n\n```\ngit show 'tag名'\n```\n##### 分支\n\n```\n// 查看分支\ngit branch\n// 创建分支\ngit branch <分支名>\n// 切换分支\ngit checkout <分支名>\n// 创建并切换分支\ngit checkout -b <分支名>\n// 删除分支\ngit branch -d <分支名>\n// 强制删除分支\ngit branch -D <分支名>\n// 合并分支 切换到主分支\ngit merge <分支名>\n// 查看已经合并的分支\ngit branch --merged\n\n```\n##### 挑选某一次的提交\n\n```\ngit cherry-pick <提交的哈希值>\n```\n\n##### 利用github创建远程仓库\n    1. 登录自己的github账号\n    2. 点击头像左面的+里面的new repository\n    3. 填写仓库名、描述（可以不填）\n    4. 选择public\n    5. 点击创建\n##### 查看当前远程仓库\n    \n```\n    git remote -v\n```\n    \n##### 更改远程仓库地址\n\n```\n    git remote set-url origin 地址\n```\n\n##### 获取远程仓库的所有分支\n    \n```\n    git fetch \n```\n    \n##### 从远程仓库拉取更新\n\n``` \n    git pull origin 分支名\n```\n##### 将自己的代码推送到远程仓库\n    \n```\n    git push origin 分支名\n```\n##### 将您的项目推送到远程仓库\n```\n    1.echo \"# aaa\" >> README.md\n    2.git init\n    3.git add README.md\n    4.git commit -m \"first commit\"\n    5.git remote add origin \"仓库地址\"\n    6.git push -u origin master\n\n    \n    //or如果您的项目以前就存在仓库里\n    \n    1.git remote add origin https://github.com/frxing/aaa.git\n    2.git push -u origin master\n```  ","slug":"git","published":1,"date":"2018-10-25T13:39:39.056Z","updated":"2018-10-25T13:39:39.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqi0002sdr1g0yct07e","content":"<h5 id=\"配置你的git名字\"><a href=\"#配置你的git名字\" class=\"headerlink\" title=\"配置你的git名字\"></a>配置你的git名字</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;你的名字&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"配置你的邮箱\"><a href=\"#配置你的邮箱\" class=\"headerlink\" title=\"配置你的邮箱\"></a>配置你的邮箱</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"初始化Git\"><a href=\"#初始化Git\" class=\"headerlink\" title=\"初始化Git\"></a>初始化Git</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看当前状态\"><a href=\"#查看当前状态\" class=\"headerlink\" title=\"查看当前状态\"></a>查看当前状态</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h5 id=\"添加到暂存区\"><a href=\"#添加到暂存区\" class=\"headerlink\" title=\"添加到暂存区\"></a>添加到暂存区</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h5 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;提交变更信息&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看工作区变更\"><a href=\"#查看工作区变更\" class=\"headerlink\" title=\"查看工作区变更\"></a>查看工作区变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看暂存区变更\"><a href=\"#查看暂存区变更\" class=\"headerlink\" title=\"查看暂存区变更\"></a>查看暂存区变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --staged</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm &lt;文件名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除的文件会直接被放到暂存区</span><br></pre></td></tr></table></figure>\n<h5 id=\"重命名文件\"><a href=\"#重命名文件\" class=\"headerlink\" title=\"重命名文件\"></a>重命名文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv &lt;文件名&gt; &lt;新文件名&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"恢复工作区的变更\"><a href=\"#恢复工作区的变更\" class=\"headerlink\" title=\"恢复工作区的变更\"></a>恢复工作区的变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- &lt;需要恢复的文件名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//此方法比较危险 如果你再次后悔就五天无力了   </span><br><span class=\"line\">//推荐使用下面的方法</span><br><span class=\"line\"></span><br><span class=\"line\">git stash</span><br><span class=\"line\"></span><br><span class=\"line\">//如果你后悔撤销了使用下面命令恢复</span><br><span class=\"line\"> </span><br><span class=\"line\">git stash apply</span><br></pre></td></tr></table></figure>\n<p> 恢复暂存区的变更</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD &lt;需要恢复的文件名</span><br></pre></td></tr></table></figure>\n<h5 id=\"恢复历史记录的变更\"><a href=\"#恢复历史记录的变更\" class=\"headerlink\" title=\"恢复历史记录的变更\"></a>恢复历史记录的变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit //提交记录commit的哈希值&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"给记录打一个tag（节点）\"><a href=\"#给记录打一个tag（节点）\" class=\"headerlink\" title=\"给记录打一个tag（节点）\"></a>给记录打一个tag（节点）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a &quot;tag名&quot; -m &quot;打tag的信息&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看所有tag\"><a href=\"#查看所有tag\" class=\"headerlink\" title=\"查看所有tag\"></a>查看所有tag</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看某一tag的详细信息\"><a href=\"#查看某一tag的详细信息\" class=\"headerlink\" title=\"查看某一tag的详细信息\"></a>查看某一tag的详细信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show &apos;tag名&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 查看分支</span><br><span class=\"line\">git branch</span><br><span class=\"line\">// 创建分支</span><br><span class=\"line\">git branch &lt;分支名&gt;</span><br><span class=\"line\">// 切换分支</span><br><span class=\"line\">git checkout &lt;分支名&gt;</span><br><span class=\"line\">// 创建并切换分支</span><br><span class=\"line\">git checkout -b &lt;分支名&gt;</span><br><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d &lt;分支名&gt;</span><br><span class=\"line\">// 强制删除分支</span><br><span class=\"line\">git branch -D &lt;分支名&gt;</span><br><span class=\"line\">// 合并分支 切换到主分支</span><br><span class=\"line\">git merge &lt;分支名&gt;</span><br><span class=\"line\">// 查看已经合并的分支</span><br><span class=\"line\">git branch --merged</span><br></pre></td></tr></table></figure>\n<h5 id=\"挑选某一次的提交\"><a href=\"#挑选某一次的提交\" class=\"headerlink\" title=\"挑选某一次的提交\"></a>挑选某一次的提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;提交的哈希值&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"利用github创建远程仓库\"><a href=\"#利用github创建远程仓库\" class=\"headerlink\" title=\"利用github创建远程仓库\"></a>利用github创建远程仓库</h5><pre><code>1. 登录自己的github账号\n2. 点击头像左面的+里面的new repository\n3. 填写仓库名、描述（可以不填）\n4. 选择public\n5. 点击创建\n</code></pre><h5 id=\"查看当前远程仓库\"><a href=\"#查看当前远程仓库\" class=\"headerlink\" title=\"查看当前远程仓库\"></a>查看当前远程仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h5 id=\"更改远程仓库地址\"><a href=\"#更改远程仓库地址\" class=\"headerlink\" title=\"更改远程仓库地址\"></a>更改远程仓库地址</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin 地址</span><br></pre></td></tr></table></figure>\n<h5 id=\"获取远程仓库的所有分支\"><a href=\"#获取远程仓库的所有分支\" class=\"headerlink\" title=\"获取远程仓库的所有分支\"></a>获取远程仓库的所有分支</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch</span><br></pre></td></tr></table></figure>\n<h5 id=\"从远程仓库拉取更新\"><a href=\"#从远程仓库拉取更新\" class=\"headerlink\" title=\"从远程仓库拉取更新\"></a>从远程仓库拉取更新</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin 分支名</span><br></pre></td></tr></table></figure>\n<h5 id=\"将自己的代码推送到远程仓库\"><a href=\"#将自己的代码推送到远程仓库\" class=\"headerlink\" title=\"将自己的代码推送到远程仓库\"></a>将自己的代码推送到远程仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 分支名</span><br></pre></td></tr></table></figure>\n<h5 id=\"将您的项目推送到远程仓库\"><a href=\"#将您的项目推送到远程仓库\" class=\"headerlink\" title=\"将您的项目推送到远程仓库\"></a>将您的项目推送到远程仓库</h5><pre><code>1.echo &quot;# aaa&quot; &gt;&gt; README.md\n2.git init\n3.git add README.md\n4.git commit -m &quot;first commit&quot;\n5.git remote add origin &quot;仓库地址&quot;\n6.git push -u origin master\n\n\n//or如果您的项目以前就存在仓库里\n\n1.git remote add origin https://github.com/frxing/aaa.git\n2.git push -u origin master\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"配置你的git名字\"><a href=\"#配置你的git名字\" class=\"headerlink\" title=\"配置你的git名字\"></a>配置你的git名字</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;你的名字&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"配置你的邮箱\"><a href=\"#配置你的邮箱\" class=\"headerlink\" title=\"配置你的邮箱\"></a>配置你的邮箱</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"初始化Git\"><a href=\"#初始化Git\" class=\"headerlink\" title=\"初始化Git\"></a>初始化Git</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看提交记录\"><a href=\"#查看提交记录\" class=\"headerlink\" title=\"查看提交记录\"></a>查看提交记录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看当前状态\"><a href=\"#查看当前状态\" class=\"headerlink\" title=\"查看当前状态\"></a>查看当前状态</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h5 id=\"添加到暂存区\"><a href=\"#添加到暂存区\" class=\"headerlink\" title=\"添加到暂存区\"></a>添加到暂存区</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<h5 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;提交变更信息&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看工作区变更\"><a href=\"#查看工作区变更\" class=\"headerlink\" title=\"查看工作区变更\"></a>查看工作区变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看暂存区变更\"><a href=\"#查看暂存区变更\" class=\"headerlink\" title=\"查看暂存区变更\"></a>查看暂存区变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --staged</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm &lt;文件名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除的文件会直接被放到暂存区</span><br></pre></td></tr></table></figure>\n<h5 id=\"重命名文件\"><a href=\"#重命名文件\" class=\"headerlink\" title=\"重命名文件\"></a>重命名文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv &lt;文件名&gt; &lt;新文件名&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"恢复工作区的变更\"><a href=\"#恢复工作区的变更\" class=\"headerlink\" title=\"恢复工作区的变更\"></a>恢复工作区的变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- &lt;需要恢复的文件名&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//此方法比较危险 如果你再次后悔就五天无力了   </span><br><span class=\"line\">//推荐使用下面的方法</span><br><span class=\"line\"></span><br><span class=\"line\">git stash</span><br><span class=\"line\"></span><br><span class=\"line\">//如果你后悔撤销了使用下面命令恢复</span><br><span class=\"line\"> </span><br><span class=\"line\">git stash apply</span><br></pre></td></tr></table></figure>\n<p> 恢复暂存区的变更</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD &lt;需要恢复的文件名</span><br></pre></td></tr></table></figure>\n<h5 id=\"恢复历史记录的变更\"><a href=\"#恢复历史记录的变更\" class=\"headerlink\" title=\"恢复历史记录的变更\"></a>恢复历史记录的变更</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit //提交记录commit的哈希值&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"给记录打一个tag（节点）\"><a href=\"#给记录打一个tag（节点）\" class=\"headerlink\" title=\"给记录打一个tag（节点）\"></a>给记录打一个tag（节点）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a &quot;tag名&quot; -m &quot;打tag的信息&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看所有tag\"><a href=\"#查看所有tag\" class=\"headerlink\" title=\"查看所有tag\"></a>查看所有tag</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看某一tag的详细信息\"><a href=\"#查看某一tag的详细信息\" class=\"headerlink\" title=\"查看某一tag的详细信息\"></a>查看某一tag的详细信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show &apos;tag名&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 查看分支</span><br><span class=\"line\">git branch</span><br><span class=\"line\">// 创建分支</span><br><span class=\"line\">git branch &lt;分支名&gt;</span><br><span class=\"line\">// 切换分支</span><br><span class=\"line\">git checkout &lt;分支名&gt;</span><br><span class=\"line\">// 创建并切换分支</span><br><span class=\"line\">git checkout -b &lt;分支名&gt;</span><br><span class=\"line\">// 删除分支</span><br><span class=\"line\">git branch -d &lt;分支名&gt;</span><br><span class=\"line\">// 强制删除分支</span><br><span class=\"line\">git branch -D &lt;分支名&gt;</span><br><span class=\"line\">// 合并分支 切换到主分支</span><br><span class=\"line\">git merge &lt;分支名&gt;</span><br><span class=\"line\">// 查看已经合并的分支</span><br><span class=\"line\">git branch --merged</span><br></pre></td></tr></table></figure>\n<h5 id=\"挑选某一次的提交\"><a href=\"#挑选某一次的提交\" class=\"headerlink\" title=\"挑选某一次的提交\"></a>挑选某一次的提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick &lt;提交的哈希值&gt;</span><br></pre></td></tr></table></figure>\n<h5 id=\"利用github创建远程仓库\"><a href=\"#利用github创建远程仓库\" class=\"headerlink\" title=\"利用github创建远程仓库\"></a>利用github创建远程仓库</h5><pre><code>1. 登录自己的github账号\n2. 点击头像左面的+里面的new repository\n3. 填写仓库名、描述（可以不填）\n4. 选择public\n5. 点击创建\n</code></pre><h5 id=\"查看当前远程仓库\"><a href=\"#查看当前远程仓库\" class=\"headerlink\" title=\"查看当前远程仓库\"></a>查看当前远程仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<h5 id=\"更改远程仓库地址\"><a href=\"#更改远程仓库地址\" class=\"headerlink\" title=\"更改远程仓库地址\"></a>更改远程仓库地址</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url origin 地址</span><br></pre></td></tr></table></figure>\n<h5 id=\"获取远程仓库的所有分支\"><a href=\"#获取远程仓库的所有分支\" class=\"headerlink\" title=\"获取远程仓库的所有分支\"></a>获取远程仓库的所有分支</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch</span><br></pre></td></tr></table></figure>\n<h5 id=\"从远程仓库拉取更新\"><a href=\"#从远程仓库拉取更新\" class=\"headerlink\" title=\"从远程仓库拉取更新\"></a>从远程仓库拉取更新</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin 分支名</span><br></pre></td></tr></table></figure>\n<h5 id=\"将自己的代码推送到远程仓库\"><a href=\"#将自己的代码推送到远程仓库\" class=\"headerlink\" title=\"将自己的代码推送到远程仓库\"></a>将自己的代码推送到远程仓库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin 分支名</span><br></pre></td></tr></table></figure>\n<h5 id=\"将您的项目推送到远程仓库\"><a href=\"#将您的项目推送到远程仓库\" class=\"headerlink\" title=\"将您的项目推送到远程仓库\"></a>将您的项目推送到远程仓库</h5><pre><code>1.echo &quot;# aaa&quot; &gt;&gt; README.md\n2.git init\n3.git add README.md\n4.git commit -m &quot;first commit&quot;\n5.git remote add origin &quot;仓库地址&quot;\n6.git push -u origin master\n\n\n//or如果您的项目以前就存在仓库里\n\n1.git remote add origin https://github.com/frxing/aaa.git\n2.git push -u origin master\n</code></pre>"},{"title":"原生js实现jsonp封装","keywords":["jsonp"],"description":"实现jsonp方法封装，可以像使用ajax一样使用jsonp","_content":"JSONP即JSON with Padding。由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源。如果要进行跨域请求， 我们可以通过使用html的script标记来进行跨域请求，并在响应中返回要执行的script代码，其中可以直接使用JSON传递javascript对象。 这种跨域的通讯方式称为JSONP。\n\n我们可以动态的去创建一个script标签，利用他的src属性没有跨域的限制来实现的，相当于我们引入一个js文件\n\n附上源码：\n```\njsonp: function (json){\n　　json = json || {};\n　　if(!json.url)return;\n　　json.cbName = json.cbName||'cb';\n　　json.data = json.data||{};\n\n　　json.data[json.cbName] = 'show'+Math.random();\n　　json.data[json.cbName] = json.data[json.cbName].replace('.','');\n\n　　var arr = [];\n　　for(var i in json.data){\n　　　　arr.push(i+'='+encodeURIComponent(json.data[i]));\n　　}\n　　var str = arr.join('&');\n\n　　window[json.data[json.cbName]]=function(result){\n　　　　json.success&&json.success(result);\n　　　　oH.removeChild(oS);\n　　　　window[json.data[json.cbName]]=null;\n　　};\n　　var oH = document.getElementsByTagName('head')[0];\n　　var oS = document.createElement('script');\n　　oS.src=json.url+'?'+str;\n　　oH.appendChild(oS);\n　　oS.onerror = function(){\n　　　　window[json.data[json.cbName]]=null;\n　　　　oH.removeChild(oS);\n　　　　json.error&&json.error();\n　　}\n}\n```\n具体用法：\n```\njsonp({\n　　url: '----',\n　　success: function (json) {\n\n　　.................\n　　},\n　　error: function(){\n　　..................\n　　}\n});\n```\n一定要注意如果我们后端返回的是json对象的话，是无法跨域返给我们的，我们的请求的时候给后端传了一个用于回调function(){}，后端必须把要返回的json对象放到这个function(){}里面，然后把这个方法返回给我们，我们才可以解析适用\n\njava返回示例：\n```\nreturn request.getParameter(\"jsonpcallback\")+\"(\"+s+\")\";  \n```","source":"_posts/jsonp.md","raw":"---\ntitle: 原生js实现jsonp封装\ncategories: jsonp \ntags: jsonp\nkeywords: [jsonp]\ndescription: 实现jsonp方法封装，可以像使用ajax一样使用jsonp\n---\nJSONP即JSON with Padding。由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源。如果要进行跨域请求， 我们可以通过使用html的script标记来进行跨域请求，并在响应中返回要执行的script代码，其中可以直接使用JSON传递javascript对象。 这种跨域的通讯方式称为JSONP。\n\n我们可以动态的去创建一个script标签，利用他的src属性没有跨域的限制来实现的，相当于我们引入一个js文件\n\n附上源码：\n```\njsonp: function (json){\n　　json = json || {};\n　　if(!json.url)return;\n　　json.cbName = json.cbName||'cb';\n　　json.data = json.data||{};\n\n　　json.data[json.cbName] = 'show'+Math.random();\n　　json.data[json.cbName] = json.data[json.cbName].replace('.','');\n\n　　var arr = [];\n　　for(var i in json.data){\n　　　　arr.push(i+'='+encodeURIComponent(json.data[i]));\n　　}\n　　var str = arr.join('&');\n\n　　window[json.data[json.cbName]]=function(result){\n　　　　json.success&&json.success(result);\n　　　　oH.removeChild(oS);\n　　　　window[json.data[json.cbName]]=null;\n　　};\n　　var oH = document.getElementsByTagName('head')[0];\n　　var oS = document.createElement('script');\n　　oS.src=json.url+'?'+str;\n　　oH.appendChild(oS);\n　　oS.onerror = function(){\n　　　　window[json.data[json.cbName]]=null;\n　　　　oH.removeChild(oS);\n　　　　json.error&&json.error();\n　　}\n}\n```\n具体用法：\n```\njsonp({\n　　url: '----',\n　　success: function (json) {\n\n　　.................\n　　},\n　　error: function(){\n　　..................\n　　}\n});\n```\n一定要注意如果我们后端返回的是json对象的话，是无法跨域返给我们的，我们的请求的时候给后端传了一个用于回调function(){}，后端必须把要返回的json对象放到这个function(){}里面，然后把这个方法返回给我们，我们才可以解析适用\n\njava返回示例：\n```\nreturn request.getParameter(\"jsonpcallback\")+\"(\"+s+\")\";  \n```","slug":"jsonp","published":1,"date":"2018-10-25T13:39:39.057Z","updated":"2018-10-25T13:39:39.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqo0006sdr17v0fn733","content":"<p>JSONP即JSON with Padding。由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源。如果要进行跨域请求， 我们可以通过使用html的script标记来进行跨域请求，并在响应中返回要执行的script代码，其中可以直接使用JSON传递javascript对象。 这种跨域的通讯方式称为JSONP。</p>\n<p>我们可以动态的去创建一个script标签，利用他的src属性没有跨域的限制来实现的，相当于我们引入一个js文件</p>\n<p>附上源码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp: function (json)&#123;</span><br><span class=\"line\">　　json = json || &#123;&#125;;</span><br><span class=\"line\">　　if(!json.url)return;</span><br><span class=\"line\">　　json.cbName = json.cbName||&apos;cb&apos;;</span><br><span class=\"line\">　　json.data = json.data||&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">　　json.data[json.cbName] = &apos;show&apos;+Math.random();</span><br><span class=\"line\">　　json.data[json.cbName] = json.data[json.cbName].replace(&apos;.&apos;,&apos;&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">　　var arr = [];</span><br><span class=\"line\">　　for(var i in json.data)&#123;</span><br><span class=\"line\">　　　　arr.push(i+&apos;=&apos;+encodeURIComponent(json.data[i]));</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　var str = arr.join(&apos;&amp;&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">　　window[json.data[json.cbName]]=function(result)&#123;</span><br><span class=\"line\">　　　　json.success&amp;&amp;json.success(result);</span><br><span class=\"line\">　　　　oH.removeChild(oS);</span><br><span class=\"line\">　　　　window[json.data[json.cbName]]=null;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　var oH = document.getElementsByTagName(&apos;head&apos;)[0];</span><br><span class=\"line\">　　var oS = document.createElement(&apos;script&apos;);</span><br><span class=\"line\">　　oS.src=json.url+&apos;?&apos;+str;</span><br><span class=\"line\">　　oH.appendChild(oS);</span><br><span class=\"line\">　　oS.onerror = function()&#123;</span><br><span class=\"line\">　　　　window[json.data[json.cbName]]=null;</span><br><span class=\"line\">　　　　oH.removeChild(oS);</span><br><span class=\"line\">　　　　json.error&amp;&amp;json.error();</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>具体用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp(&#123;</span><br><span class=\"line\">　　url: &apos;----&apos;,</span><br><span class=\"line\">　　success: function (json) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">　　.................</span><br><span class=\"line\">　　&#125;,</span><br><span class=\"line\">　　error: function()&#123;</span><br><span class=\"line\">　　..................</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>一定要注意如果我们后端返回的是json对象的话，是无法跨域返给我们的，我们的请求的时候给后端传了一个用于回调function(){}，后端必须把要返回的json对象放到这个function(){}里面，然后把这个方法返回给我们，我们才可以解析适用</p>\n<p>java返回示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return request.getParameter(&quot;jsonpcallback&quot;)+&quot;(&quot;+s+&quot;)&quot;;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>JSONP即JSON with Padding。由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源。如果要进行跨域请求， 我们可以通过使用html的script标记来进行跨域请求，并在响应中返回要执行的script代码，其中可以直接使用JSON传递javascript对象。 这种跨域的通讯方式称为JSONP。</p>\n<p>我们可以动态的去创建一个script标签，利用他的src属性没有跨域的限制来实现的，相当于我们引入一个js文件</p>\n<p>附上源码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp: function (json)&#123;</span><br><span class=\"line\">　　json = json || &#123;&#125;;</span><br><span class=\"line\">　　if(!json.url)return;</span><br><span class=\"line\">　　json.cbName = json.cbName||&apos;cb&apos;;</span><br><span class=\"line\">　　json.data = json.data||&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">　　json.data[json.cbName] = &apos;show&apos;+Math.random();</span><br><span class=\"line\">　　json.data[json.cbName] = json.data[json.cbName].replace(&apos;.&apos;,&apos;&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">　　var arr = [];</span><br><span class=\"line\">　　for(var i in json.data)&#123;</span><br><span class=\"line\">　　　　arr.push(i+&apos;=&apos;+encodeURIComponent(json.data[i]));</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">　　var str = arr.join(&apos;&amp;&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">　　window[json.data[json.cbName]]=function(result)&#123;</span><br><span class=\"line\">　　　　json.success&amp;&amp;json.success(result);</span><br><span class=\"line\">　　　　oH.removeChild(oS);</span><br><span class=\"line\">　　　　window[json.data[json.cbName]]=null;</span><br><span class=\"line\">　　&#125;;</span><br><span class=\"line\">　　var oH = document.getElementsByTagName(&apos;head&apos;)[0];</span><br><span class=\"line\">　　var oS = document.createElement(&apos;script&apos;);</span><br><span class=\"line\">　　oS.src=json.url+&apos;?&apos;+str;</span><br><span class=\"line\">　　oH.appendChild(oS);</span><br><span class=\"line\">　　oS.onerror = function()&#123;</span><br><span class=\"line\">　　　　window[json.data[json.cbName]]=null;</span><br><span class=\"line\">　　　　oH.removeChild(oS);</span><br><span class=\"line\">　　　　json.error&amp;&amp;json.error();</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>具体用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp(&#123;</span><br><span class=\"line\">　　url: &apos;----&apos;,</span><br><span class=\"line\">　　success: function (json) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">　　.................</span><br><span class=\"line\">　　&#125;,</span><br><span class=\"line\">　　error: function()&#123;</span><br><span class=\"line\">　　..................</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>一定要注意如果我们后端返回的是json对象的话，是无法跨域返给我们的，我们的请求的时候给后端传了一个用于回调function(){}，后端必须把要返回的json对象放到这个function(){}里面，然后把这个方法返回给我们，我们才可以解析适用</p>\n<p>java返回示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return request.getParameter(&quot;jsonpcallback&quot;)+&quot;(&quot;+s+&quot;)&quot;;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"解决vuex在页面刷新后数据清除的问题","keywords":["vuex"],"description":"解决vuex在页面刷新后数据清除的问题","_content":"# 解决vuex在页面刷新后数据清除的问题\n最近在使用vue+vuex的时候遇到了一个问题，第一个页面我们要去请求用户的信息，里面包含了userId，这个时候我们需要把这些用户的信息存放到vuex中，但是从第一个页面跳转到第二个页面的时候我们要去vuex中拿去用户的userId去请求一些其他接口，如果按流程走下去的话是没问题，但是如果我们在第二个页面直接刷新的话，那么在去拿去vuex中的userId的时候回报错，以为刷新页面的话会把vuex清空。最开始想到的办法是在每个依赖userId的接口前面都去判断一下，如果没有就先去请求用户信息的接口，如果依赖的接口烧的话还可以，但是看了一下接口很多，有二三十，所以果断的放弃了这个方法。在网上找了一些方法，总结一下,大概有两种：\n1. 利用浏览器的本地存储 例如localStorage sessionStorage cookie 等，在首页获取用户信息的时候存储在sessionStorage中，无论用户怎么刷新都可以保证数据的存在\n2. 在根组件中判断用户信息是否获取，如果获取了在让路由继续去渲染，否则的话先去获取用户信息的接口,也就是利用v-if去判断路由何时去渲染\n\n```\n<div id=\"app\" ref=\"center\">\n    <router-view v-if=\"isRender\"/>\n</div>\n```","source":"_posts/vuex.md","raw":"---\ntitle: 解决vuex在页面刷新后数据清除的问题\ncategories: vuex\ntags: vuex\nkeywords: [vuex]\ndescription: 解决vuex在页面刷新后数据清除的问题\n---\n# 解决vuex在页面刷新后数据清除的问题\n最近在使用vue+vuex的时候遇到了一个问题，第一个页面我们要去请求用户的信息，里面包含了userId，这个时候我们需要把这些用户的信息存放到vuex中，但是从第一个页面跳转到第二个页面的时候我们要去vuex中拿去用户的userId去请求一些其他接口，如果按流程走下去的话是没问题，但是如果我们在第二个页面直接刷新的话，那么在去拿去vuex中的userId的时候回报错，以为刷新页面的话会把vuex清空。最开始想到的办法是在每个依赖userId的接口前面都去判断一下，如果没有就先去请求用户信息的接口，如果依赖的接口烧的话还可以，但是看了一下接口很多，有二三十，所以果断的放弃了这个方法。在网上找了一些方法，总结一下,大概有两种：\n1. 利用浏览器的本地存储 例如localStorage sessionStorage cookie 等，在首页获取用户信息的时候存储在sessionStorage中，无论用户怎么刷新都可以保证数据的存在\n2. 在根组件中判断用户信息是否获取，如果获取了在让路由继续去渲染，否则的话先去获取用户信息的接口,也就是利用v-if去判断路由何时去渲染\n\n```\n<div id=\"app\" ref=\"center\">\n    <router-view v-if=\"isRender\"/>\n</div>\n```","slug":"vuex","published":1,"date":"2018-10-25T13:39:39.057Z","updated":"2018-10-25T13:39:39.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqr0008sdr1jqwrp42c","content":"<h1 id=\"解决vuex在页面刷新后数据清除的问题\"><a href=\"#解决vuex在页面刷新后数据清除的问题\" class=\"headerlink\" title=\"解决vuex在页面刷新后数据清除的问题\"></a>解决vuex在页面刷新后数据清除的问题</h1><p>最近在使用vue+vuex的时候遇到了一个问题，第一个页面我们要去请求用户的信息，里面包含了userId，这个时候我们需要把这些用户的信息存放到vuex中，但是从第一个页面跳转到第二个页面的时候我们要去vuex中拿去用户的userId去请求一些其他接口，如果按流程走下去的话是没问题，但是如果我们在第二个页面直接刷新的话，那么在去拿去vuex中的userId的时候回报错，以为刷新页面的话会把vuex清空。最开始想到的办法是在每个依赖userId的接口前面都去判断一下，如果没有就先去请求用户信息的接口，如果依赖的接口烧的话还可以，但是看了一下接口很多，有二三十，所以果断的放弃了这个方法。在网上找了一些方法，总结一下,大概有两种：</p>\n<ol>\n<li>利用浏览器的本地存储 例如localStorage sessionStorage cookie 等，在首页获取用户信息的时候存储在sessionStorage中，无论用户怎么刷新都可以保证数据的存在</li>\n<li>在根组件中判断用户信息是否获取，如果获取了在让路由继续去渲染，否则的话先去获取用户信息的接口,也就是利用v-if去判断路由何时去渲染</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;app&quot; ref=&quot;center&quot;&gt;</span><br><span class=\"line\">    &lt;router-view v-if=&quot;isRender&quot;/&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"解决vuex在页面刷新后数据清除的问题\"><a href=\"#解决vuex在页面刷新后数据清除的问题\" class=\"headerlink\" title=\"解决vuex在页面刷新后数据清除的问题\"></a>解决vuex在页面刷新后数据清除的问题</h1><p>最近在使用vue+vuex的时候遇到了一个问题，第一个页面我们要去请求用户的信息，里面包含了userId，这个时候我们需要把这些用户的信息存放到vuex中，但是从第一个页面跳转到第二个页面的时候我们要去vuex中拿去用户的userId去请求一些其他接口，如果按流程走下去的话是没问题，但是如果我们在第二个页面直接刷新的话，那么在去拿去vuex中的userId的时候回报错，以为刷新页面的话会把vuex清空。最开始想到的办法是在每个依赖userId的接口前面都去判断一下，如果没有就先去请求用户信息的接口，如果依赖的接口烧的话还可以，但是看了一下接口很多，有二三十，所以果断的放弃了这个方法。在网上找了一些方法，总结一下,大概有两种：</p>\n<ol>\n<li>利用浏览器的本地存储 例如localStorage sessionStorage cookie 等，在首页获取用户信息的时候存储在sessionStorage中，无论用户怎么刷新都可以保证数据的存在</li>\n<li>在根组件中判断用户信息是否获取，如果获取了在让路由继续去渲染，否则的话先去获取用户信息的接口,也就是利用v-if去判断路由何时去渲染</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;app&quot; ref=&quot;center&quot;&gt;</span><br><span class=\"line\">    &lt;router-view v-if=&quot;isRender&quot;/&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>"},{"title":"Linux - ssh配置免密登录","keywords":["linux","ssh"],"description":"Linux - ssh配置免密登录","_content":"由于开发环境大多时候使用Linux系统, 猿类都要时不时的远程连接到开发环境进行研发和调试, 但是, 要求安全性也是必不可少的,  现在大多数的登录有之前的账号密码改为公钥+密码登录; 为了方便连接, 而不每次都要输入密码, 所以需要配置ssh来简化登录流程\n目前我所知道的ssh免密登录有两种方式，最开始的时候我使用第二种，后来发现第一种方式比较简单，所以目前都是采用第一种方式\n首先查看本地是否生成ssh秘钥\n\n```\ncd ~/.ssh\n```\n如果此目录相面存在id_rsa和id_rsa.pub两个文件说明已经存在秘钥可以直接执行下面的免密登录步骤，否则执行如下代码：\n```\nssh-keygen -t rsa -C \"youremail@example.com\"\n```\n邮箱为你自己的邮箱，然后一路回车就可以\n##免密登录\n###第一：\n首先到本地账户的根目录下的.ssh文件下\n\n```\ncd ~/.ssh\nvim id_rsa.pub\n```\n把id_rsa.pub里面的公钥复制一下\n在你需要连接的远程账户上的根目录创建.ssh文件夹 ---> mkdir .ssh\n在文件夹下创建一个authorized_keys文件 ---> touch authorized_keys\n把本地的公钥放到这个文件中   保存后就可以了\n###第二：\n1. 配置ssh配置文件 ~/.ssh/config\n\n```\nHost ssh_name(起的别名)\nHostName hostname(IP)（你要连接的域名或者IP）\nUser user(登录名)\nPort 22\nIdentityFile pem_file_name（秘钥的路径）\nUseKeychain yes\n...\n\n```\n\n2. 倘若需要密码, 则需\n\n```shell\n# ssh-add -K pem_file_name<enter>\n# Enter passphrase for pem_file_name: password\n```\n（无权限的处理办法       sudo chmod 0600 /Users/star/code/config/furuixing.pem）\n3. 这样就ok了, 只需要输入`ssh ssh_name`就可以登录到所需要的服务器了","source":"_posts/secret_login.md","raw":"---\ntitle: Linux - ssh配置免密登录\ncategories: linux \ntags: linux\nkeywords: [linux, ssh]\ndescription: Linux - ssh配置免密登录\n---\n由于开发环境大多时候使用Linux系统, 猿类都要时不时的远程连接到开发环境进行研发和调试, 但是, 要求安全性也是必不可少的,  现在大多数的登录有之前的账号密码改为公钥+密码登录; 为了方便连接, 而不每次都要输入密码, 所以需要配置ssh来简化登录流程\n目前我所知道的ssh免密登录有两种方式，最开始的时候我使用第二种，后来发现第一种方式比较简单，所以目前都是采用第一种方式\n首先查看本地是否生成ssh秘钥\n\n```\ncd ~/.ssh\n```\n如果此目录相面存在id_rsa和id_rsa.pub两个文件说明已经存在秘钥可以直接执行下面的免密登录步骤，否则执行如下代码：\n```\nssh-keygen -t rsa -C \"youremail@example.com\"\n```\n邮箱为你自己的邮箱，然后一路回车就可以\n##免密登录\n###第一：\n首先到本地账户的根目录下的.ssh文件下\n\n```\ncd ~/.ssh\nvim id_rsa.pub\n```\n把id_rsa.pub里面的公钥复制一下\n在你需要连接的远程账户上的根目录创建.ssh文件夹 ---> mkdir .ssh\n在文件夹下创建一个authorized_keys文件 ---> touch authorized_keys\n把本地的公钥放到这个文件中   保存后就可以了\n###第二：\n1. 配置ssh配置文件 ~/.ssh/config\n\n```\nHost ssh_name(起的别名)\nHostName hostname(IP)（你要连接的域名或者IP）\nUser user(登录名)\nPort 22\nIdentityFile pem_file_name（秘钥的路径）\nUseKeychain yes\n...\n\n```\n\n2. 倘若需要密码, 则需\n\n```shell\n# ssh-add -K pem_file_name<enter>\n# Enter passphrase for pem_file_name: password\n```\n（无权限的处理办法       sudo chmod 0600 /Users/star/code/config/furuixing.pem）\n3. 这样就ok了, 只需要输入`ssh ssh_name`就可以登录到所需要的服务器了","slug":"secret_login","published":1,"date":"2018-10-25T13:39:39.057Z","updated":"2018-10-25T14:31:15.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqs0009sdr15elicclv","content":"<p>由于开发环境大多时候使用Linux系统, 猿类都要时不时的远程连接到开发环境进行研发和调试, 但是, 要求安全性也是必不可少的,  现在大多数的登录有之前的账号密码改为公钥+密码登录; 为了方便连接, 而不每次都要输入密码, 所以需要配置ssh来简化登录流程<br>目前我所知道的ssh免密登录有两种方式，最开始的时候我使用第二种，后来发现第一种方式比较简单，所以目前都是采用第一种方式<br>首先查看本地是否生成ssh秘钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br></pre></td></tr></table></figure>\n<p>如果此目录相面存在id_rsa和id_rsa.pub两个文件说明已经存在秘钥可以直接执行下面的免密登录步骤，否则执行如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure></p>\n<p>邮箱为你自己的邮箱，然后一路回车就可以</p>\n<p>##免密登录</p>\n<p>###第一：<br>首先到本地账户的根目录下的.ssh文件下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">vim id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>把id_rsa.pub里面的公钥复制一下<br>在你需要连接的远程账户上的根目录创建.ssh文件夹 —&gt; mkdir .ssh<br>在文件夹下创建一个authorized_keys文件 —&gt; touch authorized_keys<br>把本地的公钥放到这个文件中   保存后就可以了</p>\n<p>###第二：</p>\n<ol>\n<li>配置ssh配置文件 ~/.ssh/config</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host ssh_name(起的别名)</span><br><span class=\"line\">HostName hostname(IP)（你要连接的域名或者IP）</span><br><span class=\"line\">User user(登录名)</span><br><span class=\"line\">Port 22</span><br><span class=\"line\">IdentityFile pem_file_name（秘钥的路径）</span><br><span class=\"line\">UseKeychain yes</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>倘若需要密码, 则需</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> ssh-add -K pem_file_name&lt;enter&gt;</span><br><span class=\"line\"><span class=\"meta\">#</span> Enter passphrase for pem_file_name: password</span><br></pre></td></tr></table></figure>\n<p>（无权限的处理办法       sudo chmod 0600 /Users/star/code/config/furuixing.pem）</p>\n<ol start=\"3\">\n<li>这样就ok了, 只需要输入<code>ssh ssh_name</code>就可以登录到所需要的服务器了</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>由于开发环境大多时候使用Linux系统, 猿类都要时不时的远程连接到开发环境进行研发和调试, 但是, 要求安全性也是必不可少的,  现在大多数的登录有之前的账号密码改为公钥+密码登录; 为了方便连接, 而不每次都要输入密码, 所以需要配置ssh来简化登录流程<br>目前我所知道的ssh免密登录有两种方式，最开始的时候我使用第二种，后来发现第一种方式比较简单，所以目前都是采用第一种方式<br>首先查看本地是否生成ssh秘钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br></pre></td></tr></table></figure>\n<p>如果此目录相面存在id_rsa和id_rsa.pub两个文件说明已经存在秘钥可以直接执行下面的免密登录步骤，否则执行如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure></p>\n<p>邮箱为你自己的邮箱，然后一路回车就可以</p>\n<p>##免密登录</p>\n<p>###第一：<br>首先到本地账户的根目录下的.ssh文件下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">vim id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>把id_rsa.pub里面的公钥复制一下<br>在你需要连接的远程账户上的根目录创建.ssh文件夹 —&gt; mkdir .ssh<br>在文件夹下创建一个authorized_keys文件 —&gt; touch authorized_keys<br>把本地的公钥放到这个文件中   保存后就可以了</p>\n<p>###第二：</p>\n<ol>\n<li>配置ssh配置文件 ~/.ssh/config</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host ssh_name(起的别名)</span><br><span class=\"line\">HostName hostname(IP)（你要连接的域名或者IP）</span><br><span class=\"line\">User user(登录名)</span><br><span class=\"line\">Port 22</span><br><span class=\"line\">IdentityFile pem_file_name（秘钥的路径）</span><br><span class=\"line\">UseKeychain yes</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>倘若需要密码, 则需</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> ssh-add -K pem_file_name&lt;enter&gt;</span><br><span class=\"line\"><span class=\"meta\">#</span> Enter passphrase for pem_file_name: password</span><br></pre></td></tr></table></figure>\n<p>（无权限的处理办法       sudo chmod 0600 /Users/star/code/config/furuixing.pem）</p>\n<ol start=\"3\">\n<li>这样就ok了, 只需要输入<code>ssh ssh_name</code>就可以登录到所需要的服务器了</li>\n</ol>\n"},{"title":"vue-cli构建的vue项目全局引入scss的mixin方法","keywords":["webpack","vue"],"description":"在vue项目中集成了sass，但是如果想用mixin等方法的时候，要在每个.vue文件的style标签里面引入@import \"../src/assets/css/mixin.scss\"，次篇文章就是为了解决这个通点","_content":"vue-cli构建的vue项目全局引入scss的mixin方法\n\n1、首先安装模块\n\n```\nnpm install sass-resources-loader --save-dev\n```\n2、在webpack中进行配置\n在build文件夹目录下找到util.js文件，在该文件下找到exports.cssLoaders方法，在方法中加入如下代码\n\n```\nvar sassResourceLoader = {\n    loader: 'sass-resources-loader',\n    options: {\n      resources: [\n        path.resolve(__dirname, '../src/assets/css/mixin.scss'),\n      ]\n    }\n  }\n```\n3、修改generateLoaders的方法增加参数anotherLoader\n\n```\nfunction generateLoaders (loader, loaderOptions, anotherLoader) {\n    var loaders = [cssLoader, px2rpxLoader, postcssLoader]\n\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n    if (!!anotherLoader) loaders.push(anotherLoader)\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n```\n其实就是加了if (!!anotherLoader) loaders.push(anotherLoader)这句话\n4、修改return返回的对象里面的sass和scss\n\n```\n{\n    ...\n    sass: generateLoaders('sass', { indentedSyntax: true}, sassResourceLoader),\n    scss: generateLoaders('sass', {}, sassResourceLoader),\n    ...\n}\n```\n这样的话就无需在每个.vue文件的style标签前面写\n`@import \"../src/assets/css/mixin.scss\"`\n\n\n","source":"_posts/vue项目全局引入sass的全局文件.md","raw":"---\ntitle: vue-cli构建的vue项目全局引入scss的mixin方法\ncategories: vue\ntags: vue\nkeywords: [webpack, vue]\ndescription: 在vue项目中集成了sass，但是如果想用mixin等方法的时候，要在每个.vue文件的style标签里面引入@import \"../src/assets/css/mixin.scss\"，次篇文章就是为了解决这个通点\n---\nvue-cli构建的vue项目全局引入scss的mixin方法\n\n1、首先安装模块\n\n```\nnpm install sass-resources-loader --save-dev\n```\n2、在webpack中进行配置\n在build文件夹目录下找到util.js文件，在该文件下找到exports.cssLoaders方法，在方法中加入如下代码\n\n```\nvar sassResourceLoader = {\n    loader: 'sass-resources-loader',\n    options: {\n      resources: [\n        path.resolve(__dirname, '../src/assets/css/mixin.scss'),\n      ]\n    }\n  }\n```\n3、修改generateLoaders的方法增加参数anotherLoader\n\n```\nfunction generateLoaders (loader, loaderOptions, anotherLoader) {\n    var loaders = [cssLoader, px2rpxLoader, postcssLoader]\n\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n    if (!!anotherLoader) loaders.push(anotherLoader)\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n```\n其实就是加了if (!!anotherLoader) loaders.push(anotherLoader)这句话\n4、修改return返回的对象里面的sass和scss\n\n```\n{\n    ...\n    sass: generateLoaders('sass', { indentedSyntax: true}, sassResourceLoader),\n    scss: generateLoaders('sass', {}, sassResourceLoader),\n    ...\n}\n```\n这样的话就无需在每个.vue文件的style标签前面写\n`@import \"../src/assets/css/mixin.scss\"`\n\n\n","slug":"vue项目全局引入sass的全局文件","published":1,"date":"2019-04-03T10:41:18.027Z","updated":"2019-04-03T10:44:41.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqv000dsdr1vo39yios","content":"<p>vue-cli构建的vue项目全局引入scss的mixin方法</p>\n<p>1、首先安装模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sass-resources-loader --save-dev</span><br></pre></td></tr></table></figure>\n<p>2、在webpack中进行配置<br>在build文件夹目录下找到util.js文件，在该文件下找到exports.cssLoaders方法，在方法中加入如下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var sassResourceLoader = &#123;</span><br><span class=\"line\">    loader: &apos;sass-resources-loader&apos;,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      resources: [</span><br><span class=\"line\">        path.resolve(__dirname, &apos;../src/assets/css/mixin.scss&apos;),</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>3、修改generateLoaders的方法增加参数anotherLoader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function generateLoaders (loader, loaderOptions, anotherLoader) &#123;</span><br><span class=\"line\">    var loaders = [cssLoader, px2rpxLoader, postcssLoader]</span><br><span class=\"line\"></span><br><span class=\"line\">    if (loader) &#123;</span><br><span class=\"line\">      loaders.push(&#123;</span><br><span class=\"line\">        loader: loader + &apos;-loader&apos;,</span><br><span class=\"line\">        options: Object.assign(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          sourceMap: options.sourceMap</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (!!anotherLoader) loaders.push(anotherLoader)</span><br><span class=\"line\">    // Extract CSS when that option is specified</span><br><span class=\"line\">    // (which is the case during production build)</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">      return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">        use: loaders,</span><br><span class=\"line\">        fallback: &apos;vue-style-loader&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>其实就是加了if (!!anotherLoader) loaders.push(anotherLoader)这句话<br>4、修改return返回的对象里面的sass和scss</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    sass: generateLoaders(&apos;sass&apos;, &#123; indentedSyntax: true&#125;, sassResourceLoader),</span><br><span class=\"line\">    scss: generateLoaders(&apos;sass&apos;, &#123;&#125;, sassResourceLoader),</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样的话就无需在每个.vue文件的style标签前面写<br><code>@import &quot;../src/assets/css/mixin.scss&quot;</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>vue-cli构建的vue项目全局引入scss的mixin方法</p>\n<p>1、首先安装模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sass-resources-loader --save-dev</span><br></pre></td></tr></table></figure>\n<p>2、在webpack中进行配置<br>在build文件夹目录下找到util.js文件，在该文件下找到exports.cssLoaders方法，在方法中加入如下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var sassResourceLoader = &#123;</span><br><span class=\"line\">    loader: &apos;sass-resources-loader&apos;,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      resources: [</span><br><span class=\"line\">        path.resolve(__dirname, &apos;../src/assets/css/mixin.scss&apos;),</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>3、修改generateLoaders的方法增加参数anotherLoader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function generateLoaders (loader, loaderOptions, anotherLoader) &#123;</span><br><span class=\"line\">    var loaders = [cssLoader, px2rpxLoader, postcssLoader]</span><br><span class=\"line\"></span><br><span class=\"line\">    if (loader) &#123;</span><br><span class=\"line\">      loaders.push(&#123;</span><br><span class=\"line\">        loader: loader + &apos;-loader&apos;,</span><br><span class=\"line\">        options: Object.assign(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          sourceMap: options.sourceMap</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (!!anotherLoader) loaders.push(anotherLoader)</span><br><span class=\"line\">    // Extract CSS when that option is specified</span><br><span class=\"line\">    // (which is the case during production build)</span><br><span class=\"line\">    if (options.extract) &#123;</span><br><span class=\"line\">      return ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">        use: loaders,</span><br><span class=\"line\">        fallback: &apos;vue-style-loader&apos;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      return [&apos;vue-style-loader&apos;].concat(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>其实就是加了if (!!anotherLoader) loaders.push(anotherLoader)这句话<br>4、修改return返回的对象里面的sass和scss</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    sass: generateLoaders(&apos;sass&apos;, &#123; indentedSyntax: true&#125;, sassResourceLoader),</span><br><span class=\"line\">    scss: generateLoaders(&apos;sass&apos;, &#123;&#125;, sassResourceLoader),</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样的话就无需在每个.vue文件的style标签前面写<br><code>@import &quot;../src/assets/css/mixin.scss&quot;</code></p>\n"},{"title":"解决vue-cli 在多页面应用中HMR特别慢的问题","keywords":["vue-cli","webpack","HMR"],"description":"解决多页面应用在热更新的时候卡住或者构建特别慢，甚至有时候会导致js内存溢出，直接退出编译的问题","_content":"# 解决vue-cli 在多页面应用中HMR特别慢的问题\n\n作为webpack中的第一大插件html-webpack-plugin,大家应该或多或少的使用过，这个插件会根据你的模板代码，通过不同的模板引擎构建出对应的html,ejs甚至ftl文件，在标准的SPA中，该插件性能不会性能瓶颈，但是如果你使用的是多页面，该插件的构建速度绝对是地狱级别的，\n如，我只是简单修改了一个vue文件的一个文案，在阶段居然花费了16s，这大大减慢了开发效率，感受不到HMR的优势。\n我司有个用vue-cli搭建的多页面应用，随着不断的迭代，项目越来越大，导致开发的时候热更新特别慢，有时候能到到十六七秒，这样的很是影响开发效率，有时候还导致js内存溢出，直接退出编译。一脸蒙蔽的我赶紧掏出我的必杀技，百度、google一顿搜索，终于找到了我想要的答案，原来是html-webpack-plugin会对每个入口文件都执行一遍emit中所有的代码，然后发现已经有人帮我们造好了轮子\n\n```\nhtml-webpack-plugin-for-multihtml\n```\ngithub地址\n\n```\nhttps://github.com/daifee/html-webpack-plugin-for-multihtml\n```\n首先安装插件\n\n```\nnpm i html-webpack-plugin-for-multihtml --save-dev\n```\n修改配置代码\n\n```\nconst HtmlWebpackPlugin = require('html-webpack-plugin-for-multihtml');\n// 省略其他代码\n\nplugins:[\n  new HtmlWebpackPlugin({\n    template: filePath,\n    filename: `${filename}.html`,\n    chunks: ['manifest', 'vendor', filename],\n    inject: true,\n    multihtmlCache: true  // 增加该配置\n  })\n]\n```\n升级完成后HMR的速度会得到很大的提升\n\n\n","source":"_posts/解决vue-cli 在多页面应用中HMR特别慢的问题.md","raw":"---\ntitle: 解决vue-cli 在多页面应用中HMR特别慢的问题\ncategories: vue\ntags: webpack\nkeywords: [vue-cli, webpack, HMR]\ndescription: 解决多页面应用在热更新的时候卡住或者构建特别慢，甚至有时候会导致js内存溢出，直接退出编译的问题\n---\n# 解决vue-cli 在多页面应用中HMR特别慢的问题\n\n作为webpack中的第一大插件html-webpack-plugin,大家应该或多或少的使用过，这个插件会根据你的模板代码，通过不同的模板引擎构建出对应的html,ejs甚至ftl文件，在标准的SPA中，该插件性能不会性能瓶颈，但是如果你使用的是多页面，该插件的构建速度绝对是地狱级别的，\n如，我只是简单修改了一个vue文件的一个文案，在阶段居然花费了16s，这大大减慢了开发效率，感受不到HMR的优势。\n我司有个用vue-cli搭建的多页面应用，随着不断的迭代，项目越来越大，导致开发的时候热更新特别慢，有时候能到到十六七秒，这样的很是影响开发效率，有时候还导致js内存溢出，直接退出编译。一脸蒙蔽的我赶紧掏出我的必杀技，百度、google一顿搜索，终于找到了我想要的答案，原来是html-webpack-plugin会对每个入口文件都执行一遍emit中所有的代码，然后发现已经有人帮我们造好了轮子\n\n```\nhtml-webpack-plugin-for-multihtml\n```\ngithub地址\n\n```\nhttps://github.com/daifee/html-webpack-plugin-for-multihtml\n```\n首先安装插件\n\n```\nnpm i html-webpack-plugin-for-multihtml --save-dev\n```\n修改配置代码\n\n```\nconst HtmlWebpackPlugin = require('html-webpack-plugin-for-multihtml');\n// 省略其他代码\n\nplugins:[\n  new HtmlWebpackPlugin({\n    template: filePath,\n    filename: `${filename}.html`,\n    chunks: ['manifest', 'vendor', filename],\n    inject: true,\n    multihtmlCache: true  // 增加该配置\n  })\n]\n```\n升级完成后HMR的速度会得到很大的提升\n\n\n","slug":"解决vue-cli 在多页面应用中HMR特别慢的问题","published":1,"date":"2019-06-24T07:07:14.817Z","updated":"2019-06-24T07:10:03.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfqx000esdr1o16ymvlm","content":"<h1 id=\"解决vue-cli-在多页面应用中HMR特别慢的问题\"><a href=\"#解决vue-cli-在多页面应用中HMR特别慢的问题\" class=\"headerlink\" title=\"解决vue-cli 在多页面应用中HMR特别慢的问题\"></a>解决vue-cli 在多页面应用中HMR特别慢的问题</h1><p>作为webpack中的第一大插件html-webpack-plugin,大家应该或多或少的使用过，这个插件会根据你的模板代码，通过不同的模板引擎构建出对应的html,ejs甚至ftl文件，在标准的SPA中，该插件性能不会性能瓶颈，但是如果你使用的是多页面，该插件的构建速度绝对是地狱级别的，<br>如，我只是简单修改了一个vue文件的一个文案，在阶段居然花费了16s，这大大减慢了开发效率，感受不到HMR的优势。<br>我司有个用vue-cli搭建的多页面应用，随着不断的迭代，项目越来越大，导致开发的时候热更新特别慢，有时候能到到十六七秒，这样的很是影响开发效率，有时候还导致js内存溢出，直接退出编译。一脸蒙蔽的我赶紧掏出我的必杀技，百度、google一顿搜索，终于找到了我想要的答案，原来是html-webpack-plugin会对每个入口文件都执行一遍emit中所有的代码，然后发现已经有人帮我们造好了轮子</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html-webpack-plugin-for-multihtml</span><br></pre></td></tr></table></figure>\n<p>github地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/daifee/html-webpack-plugin-for-multihtml</span><br></pre></td></tr></table></figure>\n<p>首先安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-webpack-plugin-for-multihtml --save-dev</span><br></pre></td></tr></table></figure>\n<p>修改配置代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin-for-multihtml&apos;);</span><br><span class=\"line\">// 省略其他代码</span><br><span class=\"line\"></span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">  new HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">    template: filePath,</span><br><span class=\"line\">    filename: `$&#123;filename&#125;.html`,</span><br><span class=\"line\">    chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],</span><br><span class=\"line\">    inject: true,</span><br><span class=\"line\">    multihtmlCache: true  // 增加该配置</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>升级完成后HMR的速度会得到很大的提升</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"解决vue-cli-在多页面应用中HMR特别慢的问题\"><a href=\"#解决vue-cli-在多页面应用中HMR特别慢的问题\" class=\"headerlink\" title=\"解决vue-cli 在多页面应用中HMR特别慢的问题\"></a>解决vue-cli 在多页面应用中HMR特别慢的问题</h1><p>作为webpack中的第一大插件html-webpack-plugin,大家应该或多或少的使用过，这个插件会根据你的模板代码，通过不同的模板引擎构建出对应的html,ejs甚至ftl文件，在标准的SPA中，该插件性能不会性能瓶颈，但是如果你使用的是多页面，该插件的构建速度绝对是地狱级别的，<br>如，我只是简单修改了一个vue文件的一个文案，在阶段居然花费了16s，这大大减慢了开发效率，感受不到HMR的优势。<br>我司有个用vue-cli搭建的多页面应用，随着不断的迭代，项目越来越大，导致开发的时候热更新特别慢，有时候能到到十六七秒，这样的很是影响开发效率，有时候还导致js内存溢出，直接退出编译。一脸蒙蔽的我赶紧掏出我的必杀技，百度、google一顿搜索，终于找到了我想要的答案，原来是html-webpack-plugin会对每个入口文件都执行一遍emit中所有的代码，然后发现已经有人帮我们造好了轮子</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html-webpack-plugin-for-multihtml</span><br></pre></td></tr></table></figure>\n<p>github地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/daifee/html-webpack-plugin-for-multihtml</span><br></pre></td></tr></table></figure>\n<p>首先安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i html-webpack-plugin-for-multihtml --save-dev</span><br></pre></td></tr></table></figure>\n<p>修改配置代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin-for-multihtml&apos;);</span><br><span class=\"line\">// 省略其他代码</span><br><span class=\"line\"></span><br><span class=\"line\">plugins:[</span><br><span class=\"line\">  new HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">    template: filePath,</span><br><span class=\"line\">    filename: `$&#123;filename&#125;.html`,</span><br><span class=\"line\">    chunks: [&apos;manifest&apos;, &apos;vendor&apos;, filename],</span><br><span class=\"line\">    inject: true,</span><br><span class=\"line\">    multihtmlCache: true  // 增加该配置</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>升级完成后HMR的速度会得到很大的提升</p>\n"},{"title":"webpack import()动态引入优化","keywords":["vue-cli","webpack"],"description":"解决异步加载，build出来的chunk文件都是已id命名的问题","_content":"\n#### 1.将组件改异步加载\n首先组件需要异步，并且在import方法内加上注释webpackChunkName: \"filename\"(注：filename名字一定要用引号包起来否则是不生效的) 如果出现两个以上异步组件的webpackChunkName一样，那么这两个组件就打包到一个js文件内\n\n```\n// 以vue-router为例\n\n{\n  path: '/home',\n  name: 'Home',\n  component: () => import(/* webpackChunkName: \"Home\" */ './Home')\n}\n```\n\n#### 2. webpack打包配置\nvue-cli默认chunkFilename取的是id，改为name\n\n```\noutput: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[name].[chunkhash].js')\n}\n```\n\n#### 3. 其它\n一般情况1，2配置完成以后重新build文件名字就会变成以name命名的，但是我司用的vue-cli生成的模版，还需要修改.babelrc配置文件\n\n```\n{\n...\n \"comments\": true // 默认为false，false会把所有的注释都编译掉\n...\n}\n```","source":"_posts/webpack import()动态引入优化.md","raw":"---\ntitle: webpack import()动态引入优化\ncategories: vue\ntags: webpack\nkeywords: [vue-cli, webpack]\ndescription: 解决异步加载，build出来的chunk文件都是已id命名的问题\n---\n\n#### 1.将组件改异步加载\n首先组件需要异步，并且在import方法内加上注释webpackChunkName: \"filename\"(注：filename名字一定要用引号包起来否则是不生效的) 如果出现两个以上异步组件的webpackChunkName一样，那么这两个组件就打包到一个js文件内\n\n```\n// 以vue-router为例\n\n{\n  path: '/home',\n  name: 'Home',\n  component: () => import(/* webpackChunkName: \"Home\" */ './Home')\n}\n```\n\n#### 2. webpack打包配置\nvue-cli默认chunkFilename取的是id，改为name\n\n```\noutput: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[name].[chunkhash].js')\n}\n```\n\n#### 3. 其它\n一般情况1，2配置完成以后重新build文件名字就会变成以name命名的，但是我司用的vue-cli生成的模版，还需要修改.babelrc配置文件\n\n```\n{\n...\n \"comments\": true // 默认为false，false会把所有的注释都编译掉\n...\n}\n```","slug":"webpack import()动态引入优化","published":1,"date":"2019-06-27T03:35:55.994Z","updated":"2019-06-27T03:43:38.315Z","_id":"cjxe4dfqz000isdr1b9ywrh2a","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"1-将组件改异步加载\"><a href=\"#1-将组件改异步加载\" class=\"headerlink\" title=\"1.将组件改异步加载\"></a>1.将组件改异步加载</h4><p>首先组件需要异步，并且在import方法内加上注释webpackChunkName: “filename”(注：filename名字一定要用引号包起来否则是不生效的) 如果出现两个以上异步组件的webpackChunkName一样，那么这两个组件就打包到一个js文件内</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 以vue-router为例</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  path: &apos;/home&apos;,</span><br><span class=\"line\">  name: &apos;Home&apos;,</span><br><span class=\"line\">  component: () =&gt; import(/* webpackChunkName: &quot;Home&quot; */ &apos;./Home&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-webpack打包配置\"><a href=\"#2-webpack打包配置\" class=\"headerlink\" title=\"2. webpack打包配置\"></a>2. webpack打包配置</h4><p>vue-cli默认chunkFilename取的是id，改为name</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot,</span><br><span class=\"line\">    filename: utils.assetsPath(&apos;js/[name].[chunkhash].js&apos;),</span><br><span class=\"line\">    chunkFilename: utils.assetsPath(&apos;js/[name].[chunkhash].js&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-其它\"><a href=\"#3-其它\" class=\"headerlink\" title=\"3. 其它\"></a>3. 其它</h4><p>一般情况1，2配置完成以后重新build文件名字就会变成以name命名的，但是我司用的vue-cli生成的模版，还需要修改.babelrc配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\"> &quot;comments&quot;: true // 默认为false，false会把所有的注释都编译掉</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-将组件改异步加载\"><a href=\"#1-将组件改异步加载\" class=\"headerlink\" title=\"1.将组件改异步加载\"></a>1.将组件改异步加载</h4><p>首先组件需要异步，并且在import方法内加上注释webpackChunkName: “filename”(注：filename名字一定要用引号包起来否则是不生效的) 如果出现两个以上异步组件的webpackChunkName一样，那么这两个组件就打包到一个js文件内</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 以vue-router为例</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  path: &apos;/home&apos;,</span><br><span class=\"line\">  name: &apos;Home&apos;,</span><br><span class=\"line\">  component: () =&gt; import(/* webpackChunkName: &quot;Home&quot; */ &apos;./Home&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-webpack打包配置\"><a href=\"#2-webpack打包配置\" class=\"headerlink\" title=\"2. webpack打包配置\"></a>2. webpack打包配置</h4><p>vue-cli默认chunkFilename取的是id，改为name</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot,</span><br><span class=\"line\">    filename: utils.assetsPath(&apos;js/[name].[chunkhash].js&apos;),</span><br><span class=\"line\">    chunkFilename: utils.assetsPath(&apos;js/[name].[chunkhash].js&apos;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-其它\"><a href=\"#3-其它\" class=\"headerlink\" title=\"3. 其它\"></a>3. 其它</h4><p>一般情况1，2配置完成以后重新build文件名字就会变成以name命名的，但是我司用的vue-cli生成的模版，还需要修改.babelrc配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\"> &quot;comments&quot;: true // 默认为false，false会把所有的注释都编译掉</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"小程序 - 使用小程序的canvas把多张图片合成一张","keywords":["小程序"],"description":"小程序是不能够分享到朋友圈的，所以很多公司都想让生成一张带有小程序码的图片，让用户分享到朋友圈，从而达到用户拉新的目的","_content":"\n前几天接到需求要做一个小程序的项目，由于任务比较急，所以我用的是 mpVue 框架来开发小程序（公司前面的小程序项目都是用的 mpvue）。\n\n在这个需求里面其中有一个功能是要求生成一张带有用户头像和带有一个小程序码的海报，下面我把我的实现思路写下来。\n\n首先在 data 里面定义一个字段用来存放最后生成的海报的地址\n\n根据 url 把图片加载到本地方法：\n\n```\nexport function loadImg (src) {\n  console.log('开始下载图片 :', src)\n  return new Promise((resolve, reject) => {\n    wx.getImageInfo({\n      src,\n      success (res) {\n        console.log('load image url', res)\n        resolve(res)\n      },\n      fail (err) {\n        console.log('load image fail:', err)\n        reject(new Error(String(err) + '; src:' + src))\n      }\n    })\n  })\n}\n```\n\n然后把图片画在相应的位置(这里需要注意是不能直接把 canvas 画出来的图展示给用户，因为 canvas 的层级是最高的，如果你有弹框或者页面可以滑动的话，这个体验效果会非常差)：\n\n```\nasync drawPoster (avatar, qrcode) {\n  const ctx = wx.createCanvasContext('share', this)\n  const canvasWidth = rpx2px(300 * 2)\n  const canvasHeight = rpx2px(400 * 2)\n\n  const posterObj = await loadImg(posterBg)\n  ctx.drawImage(posterObj.path, 0, 0, canvasWidth, canvasHeight)\n  const qrcodeWidth = rpx2px(153)\n  const qrcodeHeight = rpx2px(153)\n  const imgObj = await loadImg(qrcode)\n  ctx.drawImage(\n    imgObj.path,\n    rpx2px(400),\n    rpx2px(600),\n    qrcodeWidth,\n    qrcodeHeight\n  )\n  const avatarWidth = rpx2px(48 * 2)\n  const avatarHeight = rpx2px(48 * 2)\n\n  ctx.save()\n  ctx.beginPath()\n  ctx.arc(rpx2px(46 * 2), rpx2px(355 * 2), rpx2px(24 * 2), 0, 2 * Math.PI)\n  ctx.setFillStyle('white')\n  ctx.fill()\n  ctx.clip()\n  const avatarObj = await loadImg(avatar || this.defaultAvar2)\n  ctx.drawImage(\n    avatarObj.path,\n    rpx2px(22 * 2),\n    rpx2px(331 * 2),\n    avatarWidth,\n    avatarHeight\n  )\n  ctx.restore()\n  ctx.draw(false, () => {\n    // 把canvas保存成图片文件\n    wx.canvasToTempFilePath({\n      canvasId: 'share',\n      success: (res) => {\n        // 把临时的图片文件路径赋给posterImg\n        // 然后在页面中动态的去绑定posterImg\n        this.posterImg = res.tempFilePath\n      },\n      fail: () => {}\n    }, this)\n  })\n}\n```\n\n方法中用的的 rpx2px 方法是微信小程序的 rpx 转换 px 的方法：\n\n```\nexport function createRpx2px () {\n  const { windowWidth } = wx.getSystemInfoSync()\n  return function (rpx) {\n    return windowWidth / 750 * rpx\n  }\n}\n```\n\n最最关键的步骤是永远放到最后的  \n由于我们平时开发的时候都是用的相对路径，但是相对路径在 mpvue 框架的 js 部分直接写会报错找不到这个文件，所以我们要在最外层使用 const posterBg = require(../../img/\\*\\*\\*.png),然后我们在 js 里面用就可以找到图片了，具体原因我也不知道为啥，如有知道的欢迎指正\n","source":"_posts/小程序canvas生成海报.md","raw":"---\ntitle: 小程序 - 使用小程序的canvas把多张图片合成一张\ncategories: 小程序\ntags: 小程序\nkeywords: [小程序]\ndescription: 小程序是不能够分享到朋友圈的，所以很多公司都想让生成一张带有小程序码的图片，让用户分享到朋友圈，从而达到用户拉新的目的\n---\n\n前几天接到需求要做一个小程序的项目，由于任务比较急，所以我用的是 mpVue 框架来开发小程序（公司前面的小程序项目都是用的 mpvue）。\n\n在这个需求里面其中有一个功能是要求生成一张带有用户头像和带有一个小程序码的海报，下面我把我的实现思路写下来。\n\n首先在 data 里面定义一个字段用来存放最后生成的海报的地址\n\n根据 url 把图片加载到本地方法：\n\n```\nexport function loadImg (src) {\n  console.log('开始下载图片 :', src)\n  return new Promise((resolve, reject) => {\n    wx.getImageInfo({\n      src,\n      success (res) {\n        console.log('load image url', res)\n        resolve(res)\n      },\n      fail (err) {\n        console.log('load image fail:', err)\n        reject(new Error(String(err) + '; src:' + src))\n      }\n    })\n  })\n}\n```\n\n然后把图片画在相应的位置(这里需要注意是不能直接把 canvas 画出来的图展示给用户，因为 canvas 的层级是最高的，如果你有弹框或者页面可以滑动的话，这个体验效果会非常差)：\n\n```\nasync drawPoster (avatar, qrcode) {\n  const ctx = wx.createCanvasContext('share', this)\n  const canvasWidth = rpx2px(300 * 2)\n  const canvasHeight = rpx2px(400 * 2)\n\n  const posterObj = await loadImg(posterBg)\n  ctx.drawImage(posterObj.path, 0, 0, canvasWidth, canvasHeight)\n  const qrcodeWidth = rpx2px(153)\n  const qrcodeHeight = rpx2px(153)\n  const imgObj = await loadImg(qrcode)\n  ctx.drawImage(\n    imgObj.path,\n    rpx2px(400),\n    rpx2px(600),\n    qrcodeWidth,\n    qrcodeHeight\n  )\n  const avatarWidth = rpx2px(48 * 2)\n  const avatarHeight = rpx2px(48 * 2)\n\n  ctx.save()\n  ctx.beginPath()\n  ctx.arc(rpx2px(46 * 2), rpx2px(355 * 2), rpx2px(24 * 2), 0, 2 * Math.PI)\n  ctx.setFillStyle('white')\n  ctx.fill()\n  ctx.clip()\n  const avatarObj = await loadImg(avatar || this.defaultAvar2)\n  ctx.drawImage(\n    avatarObj.path,\n    rpx2px(22 * 2),\n    rpx2px(331 * 2),\n    avatarWidth,\n    avatarHeight\n  )\n  ctx.restore()\n  ctx.draw(false, () => {\n    // 把canvas保存成图片文件\n    wx.canvasToTempFilePath({\n      canvasId: 'share',\n      success: (res) => {\n        // 把临时的图片文件路径赋给posterImg\n        // 然后在页面中动态的去绑定posterImg\n        this.posterImg = res.tempFilePath\n      },\n      fail: () => {}\n    }, this)\n  })\n}\n```\n\n方法中用的的 rpx2px 方法是微信小程序的 rpx 转换 px 的方法：\n\n```\nexport function createRpx2px () {\n  const { windowWidth } = wx.getSystemInfoSync()\n  return function (rpx) {\n    return windowWidth / 750 * rpx\n  }\n}\n```\n\n最最关键的步骤是永远放到最后的  \n由于我们平时开发的时候都是用的相对路径，但是相对路径在 mpvue 框架的 js 部分直接写会报错找不到这个文件，所以我们要在最外层使用 const posterBg = require(../../img/\\*\\*\\*.png),然后我们在 js 里面用就可以找到图片了，具体原因我也不知道为啥，如有知道的欢迎指正\n","slug":"小程序canvas生成海报","published":1,"date":"2018-11-14T13:21:28.469Z","updated":"2018-11-15T08:11:26.419Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfr0000ksdr129t3vyoz","content":"<p>前几天接到需求要做一个小程序的项目，由于任务比较急，所以我用的是 mpVue 框架来开发小程序（公司前面的小程序项目都是用的 mpvue）。</p>\n<p>在这个需求里面其中有一个功能是要求生成一张带有用户头像和带有一个小程序码的海报，下面我把我的实现思路写下来。</p>\n<p>首先在 data 里面定义一个字段用来存放最后生成的海报的地址</p>\n<p>根据 url 把图片加载到本地方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function loadImg (src) &#123;</span><br><span class=\"line\">  console.log(&apos;开始下载图片 :&apos;, src)</span><br><span class=\"line\">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    wx.getImageInfo(&#123;</span><br><span class=\"line\">      src,</span><br><span class=\"line\">      success (res) &#123;</span><br><span class=\"line\">        console.log(&apos;load image url&apos;, res)</span><br><span class=\"line\">        resolve(res)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      fail (err) &#123;</span><br><span class=\"line\">        console.log(&apos;load image fail:&apos;, err)</span><br><span class=\"line\">        reject(new Error(String(err) + &apos;; src:&apos; + src))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后把图片画在相应的位置(这里需要注意是不能直接把 canvas 画出来的图展示给用户，因为 canvas 的层级是最高的，如果你有弹框或者页面可以滑动的话，这个体验效果会非常差)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async drawPoster (avatar, qrcode) &#123;</span><br><span class=\"line\">  const ctx = wx.createCanvasContext(&apos;share&apos;, this)</span><br><span class=\"line\">  const canvasWidth = rpx2px(300 * 2)</span><br><span class=\"line\">  const canvasHeight = rpx2px(400 * 2)</span><br><span class=\"line\"></span><br><span class=\"line\">  const posterObj = await loadImg(posterBg)</span><br><span class=\"line\">  ctx.drawImage(posterObj.path, 0, 0, canvasWidth, canvasHeight)</span><br><span class=\"line\">  const qrcodeWidth = rpx2px(153)</span><br><span class=\"line\">  const qrcodeHeight = rpx2px(153)</span><br><span class=\"line\">  const imgObj = await loadImg(qrcode)</span><br><span class=\"line\">  ctx.drawImage(</span><br><span class=\"line\">    imgObj.path,</span><br><span class=\"line\">    rpx2px(400),</span><br><span class=\"line\">    rpx2px(600),</span><br><span class=\"line\">    qrcodeWidth,</span><br><span class=\"line\">    qrcodeHeight</span><br><span class=\"line\">  )</span><br><span class=\"line\">  const avatarWidth = rpx2px(48 * 2)</span><br><span class=\"line\">  const avatarHeight = rpx2px(48 * 2)</span><br><span class=\"line\"></span><br><span class=\"line\">  ctx.save()</span><br><span class=\"line\">  ctx.beginPath()</span><br><span class=\"line\">  ctx.arc(rpx2px(46 * 2), rpx2px(355 * 2), rpx2px(24 * 2), 0, 2 * Math.PI)</span><br><span class=\"line\">  ctx.setFillStyle(&apos;white&apos;)</span><br><span class=\"line\">  ctx.fill()</span><br><span class=\"line\">  ctx.clip()</span><br><span class=\"line\">  const avatarObj = await loadImg(avatar || this.defaultAvar2)</span><br><span class=\"line\">  ctx.drawImage(</span><br><span class=\"line\">    avatarObj.path,</span><br><span class=\"line\">    rpx2px(22 * 2),</span><br><span class=\"line\">    rpx2px(331 * 2),</span><br><span class=\"line\">    avatarWidth,</span><br><span class=\"line\">    avatarHeight</span><br><span class=\"line\">  )</span><br><span class=\"line\">  ctx.restore()</span><br><span class=\"line\">  ctx.draw(false, () =&gt; &#123;</span><br><span class=\"line\">    // 把canvas保存成图片文件</span><br><span class=\"line\">    wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">      canvasId: &apos;share&apos;,</span><br><span class=\"line\">      success: (res) =&gt; &#123;</span><br><span class=\"line\">        // 把临时的图片文件路径赋给posterImg</span><br><span class=\"line\">        // 然后在页面中动态的去绑定posterImg</span><br><span class=\"line\">        this.posterImg = res.tempFilePath</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      fail: () =&gt; &#123;&#125;</span><br><span class=\"line\">    &#125;, this)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法中用的的 rpx2px 方法是微信小程序的 rpx 转换 px 的方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function createRpx2px () &#123;</span><br><span class=\"line\">  const &#123; windowWidth &#125; = wx.getSystemInfoSync()</span><br><span class=\"line\">  return function (rpx) &#123;</span><br><span class=\"line\">    return windowWidth / 750 * rpx</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最最关键的步骤是永远放到最后的<br>由于我们平时开发的时候都是用的相对路径，但是相对路径在 mpvue 框架的 js 部分直接写会报错找不到这个文件，所以我们要在最外层使用 const posterBg = require(../../img/***.png),然后我们在 js 里面用就可以找到图片了，具体原因我也不知道为啥，如有知道的欢迎指正</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前几天接到需求要做一个小程序的项目，由于任务比较急，所以我用的是 mpVue 框架来开发小程序（公司前面的小程序项目都是用的 mpvue）。</p>\n<p>在这个需求里面其中有一个功能是要求生成一张带有用户头像和带有一个小程序码的海报，下面我把我的实现思路写下来。</p>\n<p>首先在 data 里面定义一个字段用来存放最后生成的海报的地址</p>\n<p>根据 url 把图片加载到本地方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function loadImg (src) &#123;</span><br><span class=\"line\">  console.log(&apos;开始下载图片 :&apos;, src)</span><br><span class=\"line\">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    wx.getImageInfo(&#123;</span><br><span class=\"line\">      src,</span><br><span class=\"line\">      success (res) &#123;</span><br><span class=\"line\">        console.log(&apos;load image url&apos;, res)</span><br><span class=\"line\">        resolve(res)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      fail (err) &#123;</span><br><span class=\"line\">        console.log(&apos;load image fail:&apos;, err)</span><br><span class=\"line\">        reject(new Error(String(err) + &apos;; src:&apos; + src))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后把图片画在相应的位置(这里需要注意是不能直接把 canvas 画出来的图展示给用户，因为 canvas 的层级是最高的，如果你有弹框或者页面可以滑动的话，这个体验效果会非常差)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async drawPoster (avatar, qrcode) &#123;</span><br><span class=\"line\">  const ctx = wx.createCanvasContext(&apos;share&apos;, this)</span><br><span class=\"line\">  const canvasWidth = rpx2px(300 * 2)</span><br><span class=\"line\">  const canvasHeight = rpx2px(400 * 2)</span><br><span class=\"line\"></span><br><span class=\"line\">  const posterObj = await loadImg(posterBg)</span><br><span class=\"line\">  ctx.drawImage(posterObj.path, 0, 0, canvasWidth, canvasHeight)</span><br><span class=\"line\">  const qrcodeWidth = rpx2px(153)</span><br><span class=\"line\">  const qrcodeHeight = rpx2px(153)</span><br><span class=\"line\">  const imgObj = await loadImg(qrcode)</span><br><span class=\"line\">  ctx.drawImage(</span><br><span class=\"line\">    imgObj.path,</span><br><span class=\"line\">    rpx2px(400),</span><br><span class=\"line\">    rpx2px(600),</span><br><span class=\"line\">    qrcodeWidth,</span><br><span class=\"line\">    qrcodeHeight</span><br><span class=\"line\">  )</span><br><span class=\"line\">  const avatarWidth = rpx2px(48 * 2)</span><br><span class=\"line\">  const avatarHeight = rpx2px(48 * 2)</span><br><span class=\"line\"></span><br><span class=\"line\">  ctx.save()</span><br><span class=\"line\">  ctx.beginPath()</span><br><span class=\"line\">  ctx.arc(rpx2px(46 * 2), rpx2px(355 * 2), rpx2px(24 * 2), 0, 2 * Math.PI)</span><br><span class=\"line\">  ctx.setFillStyle(&apos;white&apos;)</span><br><span class=\"line\">  ctx.fill()</span><br><span class=\"line\">  ctx.clip()</span><br><span class=\"line\">  const avatarObj = await loadImg(avatar || this.defaultAvar2)</span><br><span class=\"line\">  ctx.drawImage(</span><br><span class=\"line\">    avatarObj.path,</span><br><span class=\"line\">    rpx2px(22 * 2),</span><br><span class=\"line\">    rpx2px(331 * 2),</span><br><span class=\"line\">    avatarWidth,</span><br><span class=\"line\">    avatarHeight</span><br><span class=\"line\">  )</span><br><span class=\"line\">  ctx.restore()</span><br><span class=\"line\">  ctx.draw(false, () =&gt; &#123;</span><br><span class=\"line\">    // 把canvas保存成图片文件</span><br><span class=\"line\">    wx.canvasToTempFilePath(&#123;</span><br><span class=\"line\">      canvasId: &apos;share&apos;,</span><br><span class=\"line\">      success: (res) =&gt; &#123;</span><br><span class=\"line\">        // 把临时的图片文件路径赋给posterImg</span><br><span class=\"line\">        // 然后在页面中动态的去绑定posterImg</span><br><span class=\"line\">        this.posterImg = res.tempFilePath</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      fail: () =&gt; &#123;&#125;</span><br><span class=\"line\">    &#125;, this)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法中用的的 rpx2px 方法是微信小程序的 rpx 转换 px 的方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function createRpx2px () &#123;</span><br><span class=\"line\">  const &#123; windowWidth &#125; = wx.getSystemInfoSync()</span><br><span class=\"line\">  return function (rpx) &#123;</span><br><span class=\"line\">    return windowWidth / 750 * rpx</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最最关键的步骤是永远放到最后的<br>由于我们平时开发的时候都是用的相对路径，但是相对路径在 mpvue 框架的 js 部分直接写会报错找不到这个文件，所以我们要在最外层使用 const posterBg = require(../../img/***.png),然后我们在 js 里面用就可以找到图片了，具体原因我也不知道为啥，如有知道的欢迎指正</p>\n"},{"title":"小程序 - 图片加载优化","keywords":["小程序"],"description":"图片加载既能图片完成在展示，又能很好的利用浏览器的缓存","_content":"前一段时间有个生成海报的需求，开始讨论说让前端来生成，所以我以前写过这个，前端生成海报的具体步骤，但是后来发现个别的用户手机就是生成不了，而且我们也不知道具体发生了什么事情，所以考虑到让后端来生成，然后前端只做展示。\n\n调取前端接口，获取海报的url,前端获取到url,赋值给image标签的src属性，但是有一个问题，就是图片如果有点大的时候就会发现，图片是一行一行的加载，相信很多前端同学都遇到过这个问题，为了给用户体验好一点，决定让图片先去加载完成然后在去展示\n\n从后端获取到url ,通过wx.getImageInfo()接口获取到图片的本地路径，然后在把本地路径赋值给图片的src,在展示。\n\n本以为事情到此就结束了，但是后来发现后端做了缓存，第一次的时候有点慢，但是第二次就很快了，但是前段展示还是很慢，突然发现，使用wx.getImageInfo()接口，会每次都去重新下载图片，这样，就没法有效的利用浏览器的缓存，但是如果不用的话，用户体验有不是很好，还好看了看image组件的api,发现image组件提供了一个bindload的方法，也就是图片加载完成后的一个回调，这样就好解决了，我在组件的完成，用v-if方法控制组件的加载，组件里面用v-show方法控制组件的显示，当获取到url,就让组件去加载，然后image组件加载图片完成，在用v-show让组件显示，这样的话就既让用户体验很好，又可以有效的利用浏览器的缓存了。","source":"_posts/小程序一次图片加载优化.md","raw":"---\ntitle: 小程序 - 图片加载优化\ncategories: 小程序\ntags: 小程序\nkeywords: [小程序]\ndescription: 图片加载既能图片完成在展示，又能很好的利用浏览器的缓存\n---\n前一段时间有个生成海报的需求，开始讨论说让前端来生成，所以我以前写过这个，前端生成海报的具体步骤，但是后来发现个别的用户手机就是生成不了，而且我们也不知道具体发生了什么事情，所以考虑到让后端来生成，然后前端只做展示。\n\n调取前端接口，获取海报的url,前端获取到url,赋值给image标签的src属性，但是有一个问题，就是图片如果有点大的时候就会发现，图片是一行一行的加载，相信很多前端同学都遇到过这个问题，为了给用户体验好一点，决定让图片先去加载完成然后在去展示\n\n从后端获取到url ,通过wx.getImageInfo()接口获取到图片的本地路径，然后在把本地路径赋值给图片的src,在展示。\n\n本以为事情到此就结束了，但是后来发现后端做了缓存，第一次的时候有点慢，但是第二次就很快了，但是前段展示还是很慢，突然发现，使用wx.getImageInfo()接口，会每次都去重新下载图片，这样，就没法有效的利用浏览器的缓存，但是如果不用的话，用户体验有不是很好，还好看了看image组件的api,发现image组件提供了一个bindload的方法，也就是图片加载完成后的一个回调，这样就好解决了，我在组件的完成，用v-if方法控制组件的加载，组件里面用v-show方法控制组件的显示，当获取到url,就让组件去加载，然后image组件加载图片完成，在用v-show让组件显示，这样的话就既让用户体验很好，又可以有效的利用浏览器的缓存了。","slug":"小程序一次图片加载优化","published":1,"date":"2019-03-07T10:59:13.385Z","updated":"2019-03-07T11:00:29.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfr1000osdr1ifld7r8y","content":"<p>前一段时间有个生成海报的需求，开始讨论说让前端来生成，所以我以前写过这个，前端生成海报的具体步骤，但是后来发现个别的用户手机就是生成不了，而且我们也不知道具体发生了什么事情，所以考虑到让后端来生成，然后前端只做展示。</p>\n<p>调取前端接口，获取海报的url,前端获取到url,赋值给image标签的src属性，但是有一个问题，就是图片如果有点大的时候就会发现，图片是一行一行的加载，相信很多前端同学都遇到过这个问题，为了给用户体验好一点，决定让图片先去加载完成然后在去展示</p>\n<p>从后端获取到url ,通过wx.getImageInfo()接口获取到图片的本地路径，然后在把本地路径赋值给图片的src,在展示。</p>\n<p>本以为事情到此就结束了，但是后来发现后端做了缓存，第一次的时候有点慢，但是第二次就很快了，但是前段展示还是很慢，突然发现，使用wx.getImageInfo()接口，会每次都去重新下载图片，这样，就没法有效的利用浏览器的缓存，但是如果不用的话，用户体验有不是很好，还好看了看image组件的api,发现image组件提供了一个bindload的方法，也就是图片加载完成后的一个回调，这样就好解决了，我在组件的完成，用v-if方法控制组件的加载，组件里面用v-show方法控制组件的显示，当获取到url,就让组件去加载，然后image组件加载图片完成，在用v-show让组件显示，这样的话就既让用户体验很好，又可以有效的利用浏览器的缓存了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前一段时间有个生成海报的需求，开始讨论说让前端来生成，所以我以前写过这个，前端生成海报的具体步骤，但是后来发现个别的用户手机就是生成不了，而且我们也不知道具体发生了什么事情，所以考虑到让后端来生成，然后前端只做展示。</p>\n<p>调取前端接口，获取海报的url,前端获取到url,赋值给image标签的src属性，但是有一个问题，就是图片如果有点大的时候就会发现，图片是一行一行的加载，相信很多前端同学都遇到过这个问题，为了给用户体验好一点，决定让图片先去加载完成然后在去展示</p>\n<p>从后端获取到url ,通过wx.getImageInfo()接口获取到图片的本地路径，然后在把本地路径赋值给图片的src,在展示。</p>\n<p>本以为事情到此就结束了，但是后来发现后端做了缓存，第一次的时候有点慢，但是第二次就很快了，但是前段展示还是很慢，突然发现，使用wx.getImageInfo()接口，会每次都去重新下载图片，这样，就没法有效的利用浏览器的缓存，但是如果不用的话，用户体验有不是很好，还好看了看image组件的api,发现image组件提供了一个bindload的方法，也就是图片加载完成后的一个回调，这样就好解决了，我在组件的完成，用v-if方法控制组件的加载，组件里面用v-show方法控制组件的显示，当获取到url,就让组件去加载，然后image组件加载图片完成，在用v-show让组件显示，这样的话就既让用户体验很好，又可以有效的利用浏览器的缓存了。</p>\n"},{"title":"阿里云安装jdk、tomcat","keywords":["阿里云","jdk","tomcat"],"description":"上一篇文章写了阿里云部署jenkins，但是jenkins依赖jdk，所以这篇写一下阿里云安装jdk和tomcat","_content":"首先在阿里云/usr/local下新建两个文件夹\n\n```\nmkdir jdk\nmkdir tomcat\n```\n在本地电脑下载好jdk的包和tomcat的包，我下载的是apache-tomcat-9.0.16.tar.gz和jdk-8u202-linux-x64.tar.gz，然后把他们复制到阿里云刚才新建的对应的文件夹\n\n```\nscp -r apache-tomcat-9.0.16.tar.gz name@0.0.0.0:/usr/local/tomcat\nscp -r jdk-8u202-linux-x64.tar.gz name@0.0.0.0:/usr/local/jdk\n```\n\n然后分别进入对应的文件夹解压文件\n\n```\ncd /usr/local/jdk\ntar -zxvf jdk-8u202-linux-x64.tar.gz\n\ncd /usr/local/tomcat\ntar -zxvf apache-tomcat-9.0.16.tar.gz\n```\n接下来去配置环境变量\n\n```\nvim /etc/profile\n```\n添加如下内容,保存退出\n\n```\nJAVA_HOME=/usr/local/jdk/jdk1.8.0_202\nCLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar\nPATH=$JAVA_HOME/bin:$PATH\nCATALINA_HOME=/usr/local/tomcat/apache-tomcat-9.0.16\nexport JAVA_HOME\nexport CLASSPATH\nexport PATH\nexport CATALINA_HOME\n```\n然后刷新配置文件\n\n```\nsource /etc/profile\n```\n查看java版本\n\n```\nJava -version\n```\n\n接下来我们去启动tomcat\n\n```\ncd /usr/local/tomcat/bin\n./startup.sh\n```\n在浏览器输入http://服务器ip:8080就可以访问到tomcat页面（前提是阿里云开放了8080端口）\n\n","source":"_posts/阿里云安装jdk、tomcat.md","raw":"---\ntitle: 阿里云安装jdk、tomcat\ncategories: 阿里云\ntags: 阿里云\nkeywords: [阿里云, jdk, tomcat]\ndescription: 上一篇文章写了阿里云部署jenkins，但是jenkins依赖jdk，所以这篇写一下阿里云安装jdk和tomcat\n---\n首先在阿里云/usr/local下新建两个文件夹\n\n```\nmkdir jdk\nmkdir tomcat\n```\n在本地电脑下载好jdk的包和tomcat的包，我下载的是apache-tomcat-9.0.16.tar.gz和jdk-8u202-linux-x64.tar.gz，然后把他们复制到阿里云刚才新建的对应的文件夹\n\n```\nscp -r apache-tomcat-9.0.16.tar.gz name@0.0.0.0:/usr/local/tomcat\nscp -r jdk-8u202-linux-x64.tar.gz name@0.0.0.0:/usr/local/jdk\n```\n\n然后分别进入对应的文件夹解压文件\n\n```\ncd /usr/local/jdk\ntar -zxvf jdk-8u202-linux-x64.tar.gz\n\ncd /usr/local/tomcat\ntar -zxvf apache-tomcat-9.0.16.tar.gz\n```\n接下来去配置环境变量\n\n```\nvim /etc/profile\n```\n添加如下内容,保存退出\n\n```\nJAVA_HOME=/usr/local/jdk/jdk1.8.0_202\nCLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar\nPATH=$JAVA_HOME/bin:$PATH\nCATALINA_HOME=/usr/local/tomcat/apache-tomcat-9.0.16\nexport JAVA_HOME\nexport CLASSPATH\nexport PATH\nexport CATALINA_HOME\n```\n然后刷新配置文件\n\n```\nsource /etc/profile\n```\n查看java版本\n\n```\nJava -version\n```\n\n接下来我们去启动tomcat\n\n```\ncd /usr/local/tomcat/bin\n./startup.sh\n```\n在浏览器输入http://服务器ip:8080就可以访问到tomcat页面（前提是阿里云开放了8080端口）\n\n","slug":"阿里云安装jdk、tomcat","published":1,"date":"2019-03-07T09:25:01.254Z","updated":"2019-03-07T09:28:31.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfr3000qsdr124zr7l1f","content":"<p>首先在阿里云/usr/local下新建两个文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir jdk</span><br><span class=\"line\">mkdir tomcat</span><br></pre></td></tr></table></figure>\n<p>在本地电脑下载好jdk的包和tomcat的包，我下载的是apache-tomcat-9.0.16.tar.gz和jdk-8u202-linux-x64.tar.gz，然后把他们复制到阿里云刚才新建的对应的文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-9.0.16.tar.gz name@0.0.0.0:/usr/local/tomcat</span><br><span class=\"line\">scp -r jdk-8u202-linux-x64.tar.gz name@0.0.0.0:/usr/local/jdk</span><br></pre></td></tr></table></figure>\n<p>然后分别进入对应的文件夹解压文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/jdk</span><br><span class=\"line\">tar -zxvf jdk-8u202-linux-x64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/local/tomcat</span><br><span class=\"line\">tar -zxvf apache-tomcat-9.0.16.tar.gz</span><br></pre></td></tr></table></figure>\n<p>接下来去配置环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>添加如下内容,保存退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA_HOME=/usr/local/jdk/jdk1.8.0_202</span><br><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CATALINA_HOME=/usr/local/tomcat/apache-tomcat-9.0.16</span><br><span class=\"line\">export JAVA_HOME</span><br><span class=\"line\">export CLASSPATH</span><br><span class=\"line\">export PATH</span><br><span class=\"line\">export CATALINA_HOME</span><br></pre></td></tr></table></figure>\n<p>然后刷新配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<p>查看java版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Java -version</span><br></pre></td></tr></table></figure>\n<p>接下来我们去启动tomcat</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/tomcat/bin</span><br><span class=\"line\">./startup.sh</span><br></pre></td></tr></table></figure>\n<p>在浏览器输入http://服务器ip:8080就可以访问到tomcat页面（前提是阿里云开放了8080端口）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先在阿里云/usr/local下新建两个文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir jdk</span><br><span class=\"line\">mkdir tomcat</span><br></pre></td></tr></table></figure>\n<p>在本地电脑下载好jdk的包和tomcat的包，我下载的是apache-tomcat-9.0.16.tar.gz和jdk-8u202-linux-x64.tar.gz，然后把他们复制到阿里云刚才新建的对应的文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-9.0.16.tar.gz name@0.0.0.0:/usr/local/tomcat</span><br><span class=\"line\">scp -r jdk-8u202-linux-x64.tar.gz name@0.0.0.0:/usr/local/jdk</span><br></pre></td></tr></table></figure>\n<p>然后分别进入对应的文件夹解压文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/jdk</span><br><span class=\"line\">tar -zxvf jdk-8u202-linux-x64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd /usr/local/tomcat</span><br><span class=\"line\">tar -zxvf apache-tomcat-9.0.16.tar.gz</span><br></pre></td></tr></table></figure>\n<p>接下来去配置环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure>\n<p>添加如下内容,保存退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JAVA_HOME=/usr/local/jdk/jdk1.8.0_202</span><br><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CATALINA_HOME=/usr/local/tomcat/apache-tomcat-9.0.16</span><br><span class=\"line\">export JAVA_HOME</span><br><span class=\"line\">export CLASSPATH</span><br><span class=\"line\">export PATH</span><br><span class=\"line\">export CATALINA_HOME</span><br></pre></td></tr></table></figure>\n<p>然后刷新配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<p>查看java版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Java -version</span><br></pre></td></tr></table></figure>\n<p>接下来我们去启动tomcat</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/tomcat/bin</span><br><span class=\"line\">./startup.sh</span><br></pre></td></tr></table></figure>\n<p>在浏览器输入http://服务器ip:8080就可以访问到tomcat页面（前提是阿里云开放了8080端口）</p>\n"},{"title":"阿里云集成jenkins实现自动部署github项目","keywords":["阿里云","jenkins"],"description":"双11的时候买了3年的阿里云，平时只是挂自己的博客，但是每次都要写完push到github的时候，都要到服务器去执行一些列的操作，作者本地直接吧编译好的文件put上去，这样感觉很麻烦，于是就想着在我的服务器上集成一下jenkins，然后每次点击部署就行了，下面说一下具体的步骤。","_content":"\n首先需要安装jenkins,jenkins依赖的是java和tomcat,还好我的服务器早就装好了，这里就不做过多描述了。\n1、安装\n\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo \nrpm –import https://jenkins-ci.org/redhat/jenkins-ci.org.key \nyum install jenkins\n```\n2、运行jenkins\n\n```\njenkins service jenkins start\n```\n如果运行的时候出现错误如果出现failed 可能是jdk路径错了     \n先获取java路径\n\n```\nwhich java\n```\n获取到路径，然后去vi /etc/init.d/jenkins替换掉默认的java路径\n找到 /usr/bin/java 替换成 /usr/local/jdk/jdk1.8.0_202/bin/java\n修改jenkins的默认端口为8081，我担心与tomcat会冲突所以修改\n\n```\nvim /etc/sysconfig/jenkins\n```\n找到JENKINS_PORT=\"8081\"修改\n运行如下命令重载系统文件并启动jenkins\n\n```\nsystemctl daemon-reload\njenkins service jenkins start\n```\n如果提示jenkins:not found command,可以先去/usr/bin目录看下是否有jenkins\n如果没有执行如下命令，穿件软连接\n\n```\nsudo ln -s /home/git/.rbenv/versions/2.1.8/bin/rspec /usr/bin/rspec\n```\n由于jenkins默认使用的是jenkins用户执行任务，所有可能你的程序对jenkins用户没有权限\n修改jenkins执行用户\n\n```\nvi /etc/sysconfig/jenkins\n```\n修改JENKINS_USER值（由于我的是root账户，所以改成root）：\n\n```\n## Type:        string\n## Default:     \"jenkins\"\n## ServiceRestart: jenkins\n#\n# Unix user account that runs the Jenkins daemon\n# Be careful when you change this, as you need to update\n# permissions of $JENKINS_HOME and /var/log/jenkins.\n#\nJENKINS_USER=\"root\"\n```\n重启jenkins服务\n\n```\nsudo /etc/init.d/jenkins restart\nsudo service jenkins restart\n```\n\n","source":"_posts/阿里云集成jenkins实现自动部署github项目.md","raw":"---\ntitle: 阿里云集成jenkins实现自动部署github项目\ncategories: 阿里云\ntags: 阿里云\nkeywords: [阿里云, jenkins]\ndescription: 双11的时候买了3年的阿里云，平时只是挂自己的博客，但是每次都要写完push到github的时候，都要到服务器去执行一些列的操作，作者本地直接吧编译好的文件put上去，这样感觉很麻烦，于是就想着在我的服务器上集成一下jenkins，然后每次点击部署就行了，下面说一下具体的步骤。\n---\n\n首先需要安装jenkins,jenkins依赖的是java和tomcat,还好我的服务器早就装好了，这里就不做过多描述了。\n1、安装\n\n```\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo \nrpm –import https://jenkins-ci.org/redhat/jenkins-ci.org.key \nyum install jenkins\n```\n2、运行jenkins\n\n```\njenkins service jenkins start\n```\n如果运行的时候出现错误如果出现failed 可能是jdk路径错了     \n先获取java路径\n\n```\nwhich java\n```\n获取到路径，然后去vi /etc/init.d/jenkins替换掉默认的java路径\n找到 /usr/bin/java 替换成 /usr/local/jdk/jdk1.8.0_202/bin/java\n修改jenkins的默认端口为8081，我担心与tomcat会冲突所以修改\n\n```\nvim /etc/sysconfig/jenkins\n```\n找到JENKINS_PORT=\"8081\"修改\n运行如下命令重载系统文件并启动jenkins\n\n```\nsystemctl daemon-reload\njenkins service jenkins start\n```\n如果提示jenkins:not found command,可以先去/usr/bin目录看下是否有jenkins\n如果没有执行如下命令，穿件软连接\n\n```\nsudo ln -s /home/git/.rbenv/versions/2.1.8/bin/rspec /usr/bin/rspec\n```\n由于jenkins默认使用的是jenkins用户执行任务，所有可能你的程序对jenkins用户没有权限\n修改jenkins执行用户\n\n```\nvi /etc/sysconfig/jenkins\n```\n修改JENKINS_USER值（由于我的是root账户，所以改成root）：\n\n```\n## Type:        string\n## Default:     \"jenkins\"\n## ServiceRestart: jenkins\n#\n# Unix user account that runs the Jenkins daemon\n# Be careful when you change this, as you need to update\n# permissions of $JENKINS_HOME and /var/log/jenkins.\n#\nJENKINS_USER=\"root\"\n```\n重启jenkins服务\n\n```\nsudo /etc/init.d/jenkins restart\nsudo service jenkins restart\n```\n\n","slug":"阿里云集成jenkins实现自动部署github项目","published":1,"date":"2019-03-07T06:06:50.931Z","updated":"2019-03-07T07:35:09.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfr5000usdr1mmtp8lis","content":"<p>首先需要安装jenkins,jenkins依赖的是java和tomcat,还好我的服务器早就装好了，这里就不做过多描述了。<br>1、安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo </span><br><span class=\"line\">rpm –import https://jenkins-ci.org/redhat/jenkins-ci.org.key </span><br><span class=\"line\">yum install jenkins</span><br></pre></td></tr></table></figure>\n<p>2、运行jenkins</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jenkins service jenkins start</span><br></pre></td></tr></table></figure>\n<p>如果运行的时候出现错误如果出现failed 可能是jdk路径错了<br>先获取java路径</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which java</span><br></pre></td></tr></table></figure>\n<p>获取到路径，然后去vi /etc/init.d/jenkins替换掉默认的java路径<br>找到 /usr/bin/java 替换成 /usr/local/jdk/jdk1.8.0_202/bin/java<br>修改jenkins的默认端口为8081，我担心与tomcat会冲突所以修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure>\n<p>找到JENKINS_PORT=”8081”修改<br>运行如下命令重载系统文件并启动jenkins</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">jenkins service jenkins start</span><br></pre></td></tr></table></figure>\n<p>如果提示jenkins:not found command,可以先去/usr/bin目录看下是否有jenkins<br>如果没有执行如下命令，穿件软连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /home/git/.rbenv/versions/2.1.8/bin/rspec /usr/bin/rspec</span><br></pre></td></tr></table></figure>\n<p>由于jenkins默认使用的是jenkins用户执行任务，所有可能你的程序对jenkins用户没有权限<br>修改jenkins执行用户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure>\n<p>修改JENKINS_USER值（由于我的是root账户，所以改成root）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Type:        string</span><br><span class=\"line\">## Default:     &quot;jenkins&quot;</span><br><span class=\"line\">## ServiceRestart: jenkins</span><br><span class=\"line\">#</span><br><span class=\"line\"># Unix user account that runs the Jenkins daemon</span><br><span class=\"line\"># Be careful when you change this, as you need to update</span><br><span class=\"line\"># permissions of $JENKINS_HOME and /var/log/jenkins.</span><br><span class=\"line\">#</span><br><span class=\"line\">JENKINS_USER=&quot;root&quot;</span><br></pre></td></tr></table></figure>\n<p>重启jenkins服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/jenkins restart</span><br><span class=\"line\">sudo service jenkins restart</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>首先需要安装jenkins,jenkins依赖的是java和tomcat,还好我的服务器早就装好了，这里就不做过多描述了。<br>1、安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo </span><br><span class=\"line\">rpm –import https://jenkins-ci.org/redhat/jenkins-ci.org.key </span><br><span class=\"line\">yum install jenkins</span><br></pre></td></tr></table></figure>\n<p>2、运行jenkins</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jenkins service jenkins start</span><br></pre></td></tr></table></figure>\n<p>如果运行的时候出现错误如果出现failed 可能是jdk路径错了<br>先获取java路径</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which java</span><br></pre></td></tr></table></figure>\n<p>获取到路径，然后去vi /etc/init.d/jenkins替换掉默认的java路径<br>找到 /usr/bin/java 替换成 /usr/local/jdk/jdk1.8.0_202/bin/java<br>修改jenkins的默认端口为8081，我担心与tomcat会冲突所以修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure>\n<p>找到JENKINS_PORT=”8081”修改<br>运行如下命令重载系统文件并启动jenkins</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">jenkins service jenkins start</span><br></pre></td></tr></table></figure>\n<p>如果提示jenkins:not found command,可以先去/usr/bin目录看下是否有jenkins<br>如果没有执行如下命令，穿件软连接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /home/git/.rbenv/versions/2.1.8/bin/rspec /usr/bin/rspec</span><br></pre></td></tr></table></figure>\n<p>由于jenkins默认使用的是jenkins用户执行任务，所有可能你的程序对jenkins用户没有权限<br>修改jenkins执行用户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure>\n<p>修改JENKINS_USER值（由于我的是root账户，所以改成root）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## Type:        string</span><br><span class=\"line\">## Default:     &quot;jenkins&quot;</span><br><span class=\"line\">## ServiceRestart: jenkins</span><br><span class=\"line\">#</span><br><span class=\"line\"># Unix user account that runs the Jenkins daemon</span><br><span class=\"line\"># Be careful when you change this, as you need to update</span><br><span class=\"line\"># permissions of $JENKINS_HOME and /var/log/jenkins.</span><br><span class=\"line\">#</span><br><span class=\"line\">JENKINS_USER=&quot;root&quot;</span><br></pre></td></tr></table></figure>\n<p>重启jenkins服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /etc/init.d/jenkins restart</span><br><span class=\"line\">sudo service jenkins restart</span><br></pre></td></tr></table></figure>\n"},{"title":"mac下面安装并运行mongodb服务","keywords":["mongoDB"],"description":"mac安装并运行mongodb的详细步骤","_content":"# mac下面安装并运行mongodb服务\n前几天自己用node写了一个小demo，但是想把数据存到数据库，但是本地没有安装MongoDB服务，于是就从头开始安装了一下，把步骤记录下来：\n\n1、首先是安装mongodb\n```\nbrew install mongodb\n```\n此时的mongodb的安装路径是 /usr/local/Cellar/mongodb\n2、到用户的根目录下配置环境变量\n```\ncd ~\nvim .bash_profile\n```\n把下面的代码放到.bash_profile文件里面\n```\nexport MONGO_PATH=/usr/local/Cellar/mongodb\nexport PATH=$PATH:$MONGO_PATH/bin\n```\n3、在系统的根目录新建存放数据库文件的文件夹\n```\nsudo mkdir -p /data/db\n```\n4、运行mongod命令\n如果此时报错，看错误提示是否是数据库文件没有读写权限，需要在/data下执行如下命令\n```\nsudo chown -R 777 *\n```\n5、最后运行mongo命令启动","source":"_posts/docs/mac安装mongodb.md","raw":"---\ntitle:  mac下面安装并运行mongodb服务\ncategories: mongoDB \ntags: mongoDB\nkeywords: [mongoDB]\ndescription: mac安装并运行mongodb的详细步骤\n---\n# mac下面安装并运行mongodb服务\n前几天自己用node写了一个小demo，但是想把数据存到数据库，但是本地没有安装MongoDB服务，于是就从头开始安装了一下，把步骤记录下来：\n\n1、首先是安装mongodb\n```\nbrew install mongodb\n```\n此时的mongodb的安装路径是 /usr/local/Cellar/mongodb\n2、到用户的根目录下配置环境变量\n```\ncd ~\nvim .bash_profile\n```\n把下面的代码放到.bash_profile文件里面\n```\nexport MONGO_PATH=/usr/local/Cellar/mongodb\nexport PATH=$PATH:$MONGO_PATH/bin\n```\n3、在系统的根目录新建存放数据库文件的文件夹\n```\nsudo mkdir -p /data/db\n```\n4、运行mongod命令\n如果此时报错，看错误提示是否是数据库文件没有读写权限，需要在/data下执行如下命令\n```\nsudo chown -R 777 *\n```\n5、最后运行mongo命令启动","slug":"docs/mac安装mongodb","published":1,"date":"2018-09-25T02:27:29.905Z","updated":"2019-03-07T03:33:00.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxe4dfty001rsdr1r2peyn07","content":"<h1 id=\"mac下面安装并运行mongodb服务\"><a href=\"#mac下面安装并运行mongodb服务\" class=\"headerlink\" title=\"mac下面安装并运行mongodb服务\"></a>mac下面安装并运行mongodb服务</h1><p>前几天自己用node写了一个小demo，但是想把数据存到数据库，但是本地没有安装MongoDB服务，于是就从头开始安装了一下，把步骤记录下来：</p>\n<p>1、首先是安装mongodb<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mongodb</span><br></pre></td></tr></table></figure></p>\n<p>此时的mongodb的安装路径是 /usr/local/Cellar/mongodb<br>2、到用户的根目录下配置环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br><span class=\"line\">vim .bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>把下面的代码放到.bash_profile文件里面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export MONGO_PATH=/usr/local/Cellar/mongodb</span><br><span class=\"line\">export PATH=$PATH:$MONGO_PATH/bin</span><br></pre></td></tr></table></figure></p>\n<p>3、在系统的根目录新建存放数据库文件的文件夹<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /data/db</span><br></pre></td></tr></table></figure></p>\n<p>4、运行mongod命令<br>如果此时报错，看错误提示是否是数据库文件没有读写权限，需要在/data下执行如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R 777 *</span><br></pre></td></tr></table></figure></p>\n<p>5、最后运行mongo命令启动</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mac下面安装并运行mongodb服务\"><a href=\"#mac下面安装并运行mongodb服务\" class=\"headerlink\" title=\"mac下面安装并运行mongodb服务\"></a>mac下面安装并运行mongodb服务</h1><p>前几天自己用node写了一个小demo，但是想把数据存到数据库，但是本地没有安装MongoDB服务，于是就从头开始安装了一下，把步骤记录下来：</p>\n<p>1、首先是安装mongodb<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mongodb</span><br></pre></td></tr></table></figure></p>\n<p>此时的mongodb的安装路径是 /usr/local/Cellar/mongodb<br>2、到用户的根目录下配置环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~</span><br><span class=\"line\">vim .bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>把下面的代码放到.bash_profile文件里面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export MONGO_PATH=/usr/local/Cellar/mongodb</span><br><span class=\"line\">export PATH=$PATH:$MONGO_PATH/bin</span><br></pre></td></tr></table></figure></p>\n<p>3、在系统的根目录新建存放数据库文件的文件夹<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /data/db</span><br></pre></td></tr></table></figure></p>\n<p>4、运行mongod命令<br>如果此时报错，看错误提示是否是数据库文件没有读写权限，需要在/data下执行如下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R 777 *</span><br></pre></td></tr></table></figure></p>\n<p>5、最后运行mongo命令启动</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjxe4dfqd0000sdr1w7qvqz7d","category_id":"cjxe4dfql0004sdr195x9lybh","_id":"cjxe4dfqy000fsdr1xb3tu59l"},{"post_id":"cjxe4dfqi0002sdr1g0yct07e","category_id":"cjxe4dfqu000asdr1oo5dlzgk","_id":"cjxe4dfr1000lsdr189dn9adn"},{"post_id":"cjxe4dfqo0006sdr17v0fn733","category_id":"cjxe4dfqy000gsdr1mk3kngqe","_id":"cjxe4dfr5000rsdr1qyh2d3k4"},{"post_id":"cjxe4dfqr0008sdr1jqwrp42c","category_id":"cjxe4dfr1000msdr16q8qlaem","_id":"cjxe4dfr9000wsdr111v3dxqz"},{"post_id":"cjxe4dfqs0009sdr15elicclv","category_id":"cjxe4dfr5000ssdr19zjhc2uu","_id":"cjxe4dfra0010sdr1nomd8fps"},{"post_id":"cjxe4dfqv000dsdr1vo39yios","category_id":"cjxe4dfr9000xsdr1w8z9xa1a","_id":"cjxe4dfrd0015sdr1o2x9w0rt"},{"post_id":"cjxe4dfqx000esdr1o16ymvlm","category_id":"cjxe4dfr9000xsdr1w8z9xa1a","_id":"cjxe4dfre0019sdr1xauhprph"},{"post_id":"cjxe4dfqz000isdr1b9ywrh2a","category_id":"cjxe4dfr9000xsdr1w8z9xa1a","_id":"cjxe4dfrf001csdr1p2v8fr8n"},{"post_id":"cjxe4dfr0000ksdr129t3vyoz","category_id":"cjxe4dfre0018sdr1si6lkdmb","_id":"cjxe4dfrg001hsdr1okvu110w"},{"post_id":"cjxe4dfr1000osdr1ifld7r8y","category_id":"cjxe4dfre0018sdr1si6lkdmb","_id":"cjxe4dfrh001ksdr1c7xuwrfz"},{"post_id":"cjxe4dfr3000qsdr124zr7l1f","category_id":"cjxe4dfrg001gsdr1jmu2gx1k","_id":"cjxe4dfrj001osdr12u4vsl91"},{"post_id":"cjxe4dfr5000usdr1mmtp8lis","category_id":"cjxe4dfrg001gsdr1jmu2gx1k","_id":"cjxe4dfrj001qsdr12mdw8p5e"},{"post_id":"cjxe4dfty001rsdr1r2peyn07","category_id":"cjxe4dftz001ssdr1i44idjmf","_id":"cjxe4dfu0001vsdr16tld8vwa"}],"PostTag":[{"post_id":"cjxe4dfqd0000sdr1w7qvqz7d","tag_id":"cjxe4dfqn0005sdr1e0m5ly7h","_id":"cjxe4dfqv000csdr13vksxn0z"},{"post_id":"cjxe4dfqi0002sdr1g0yct07e","tag_id":"cjxe4dfqu000bsdr1fu1ajdd8","_id":"cjxe4dfqz000jsdr1x8usl8xi"},{"post_id":"cjxe4dfqo0006sdr17v0fn733","tag_id":"cjxe4dfqy000hsdr1k9xw99wa","_id":"cjxe4dfr2000psdr1fqptb17s"},{"post_id":"cjxe4dfqr0008sdr1jqwrp42c","tag_id":"cjxe4dfr1000nsdr1q5mxgcrk","_id":"cjxe4dfr6000vsdr1jxpcs61f"},{"post_id":"cjxe4dfqs0009sdr15elicclv","tag_id":"cjxe4dfr5000tsdr16ynhsngg","_id":"cjxe4dfr9000zsdr1ti5g0629"},{"post_id":"cjxe4dfqv000dsdr1vo39yios","tag_id":"cjxe4dfr9000ysdr1nlupzujw","_id":"cjxe4dfrc0013sdr1hfdhefk7"},{"post_id":"cjxe4dfqx000esdr1o16ymvlm","tag_id":"cjxe4dfrb0012sdr168bfg9gy","_id":"cjxe4dfrd0017sdr1pv3s8bxx"},{"post_id":"cjxe4dfqz000isdr1b9ywrh2a","tag_id":"cjxe4dfrb0012sdr168bfg9gy","_id":"cjxe4dfrf001bsdr1wbnifsax"},{"post_id":"cjxe4dfr0000ksdr129t3vyoz","tag_id":"cjxe4dfre001asdr1f52mytak","_id":"cjxe4dfrg001fsdr13hg8l2px"},{"post_id":"cjxe4dfr1000osdr1ifld7r8y","tag_id":"cjxe4dfre001asdr1f52mytak","_id":"cjxe4dfrh001jsdr1gqo4g4dz"},{"post_id":"cjxe4dfr3000qsdr124zr7l1f","tag_id":"cjxe4dfrg001isdr1pry3rlms","_id":"cjxe4dfri001nsdr1uadejm8j"},{"post_id":"cjxe4dfr5000usdr1mmtp8lis","tag_id":"cjxe4dfrg001isdr1pry3rlms","_id":"cjxe4dfrj001psdr10f4kckxe"},{"post_id":"cjxe4dfty001rsdr1r2peyn07","tag_id":"cjxe4dftz001tsdr1jzawuf9t","_id":"cjxe4dftz001usdr1vutmmaf3"}],"Tag":[{"name":"浏览器","_id":"cjxe4dfqn0005sdr1e0m5ly7h"},{"name":"git","_id":"cjxe4dfqu000bsdr1fu1ajdd8"},{"name":"jsonp","_id":"cjxe4dfqy000hsdr1k9xw99wa"},{"name":"vuex","_id":"cjxe4dfr1000nsdr1q5mxgcrk"},{"name":"linux","_id":"cjxe4dfr5000tsdr16ynhsngg"},{"name":"vue","_id":"cjxe4dfr9000ysdr1nlupzujw"},{"name":"webpack","_id":"cjxe4dfrb0012sdr168bfg9gy"},{"name":"小程序","_id":"cjxe4dfre001asdr1f52mytak"},{"name":"阿里云","_id":"cjxe4dfrg001isdr1pry3rlms"},{"name":"mongoDB","_id":"cjxe4dftz001tsdr1jzawuf9t"}]}}